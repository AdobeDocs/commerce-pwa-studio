{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/general-concepts/client-side-caching/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,uBADR,wBAGA,6GACA,eACE,GAAM,YADR,aAGA,yMAGA,uKAEA,wTAGA,eACE,GAAM,0BADR,2BAGA,wBAAS,cAAGC,WAAW,IACnB,KAAQ,4EADH,kBAAT,4OAIA,eACE,GAAM,wBADR,yBAGA,2DAA4C,cAAGA,WAAW,IACtD,KAAQ,oDADgC,WAA5C,2DAG0C,cAAGA,WAAW,IACpD,KAAQ,gGAD8B,sBAH1C,gBAMA,gNAEA,+CAAgC,cAAGA,WAAW,IAC1C,KAAQ,8EADoB,sBAAhC,8BAGA,eACE,GAAM,0BADR,2BAGA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,+GADD,0BAAX,kLAIA,gIAIA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,kBAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,MAGA,eAAIA,WAAW,KACb,MAAS,MADX,0BAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,mBAGA,eAAIA,WAAW,KACb,MAAS,MADX,sBAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,mFAGA,eAAIA,WAAW,KACb,MAAS,MADX,2BASN,eACE,GAAM,iBADR,kBAGA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,sHADD,iBAAX,2KAIA,+FACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,kBAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,gBAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAMN,eACE,GAAM,eADR,gBAGA,0BAAW,cAAGA,WAAW,IACrB,KAAQ,sHADD,eAAX,iKAIA,kIACA,wGACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,kBAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,WAGA,eAAIA,WAAW,KACb,MAAS,MADX,+CAMN,eACE,GAAM,wCADR,yCAGA,6KAC+B,cAAGA,WAAW,IACzC,KAAQ,6DADmB,iBAD/B,4DAIA,yEAA0D,uBAAYA,WAAW,KAAvB,uBAA1D,eAAwI,cAAGA,WAAW,IAClJ,KAAQ,yDAD4H,wBAAxI,8GAIA,6HAC6B,uBAAYA,WAAW,KAAvB,eAD7B,iBACqG,uBAAYA,WAAW,KAAvB,SADrG,gBAEA,0DAA2C,cAAGA,WAAW,IACrD,KAAQ,8FAD+B,0BAA3C,WAOJJ,EAAWK,gBAAiB","file":"component---src-pages-guides-general-concepts-client-side-caching-index-md-9876b9331bf071bc0859.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"client-side-caching\"\n    }}>{`Client-side caching`}</h1>\n    <p>{`Client-side caching is the storage of network data to a local cache for future re-use.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Client-server communication is slow and expensive.\nPerformance is an important feature for any Progressive Web Application (PWA), so\nrequests to the server should be minimized.`}</p>\n    <p>{`Offline mode is also a required feature for a PWA.\nIn offline mode, the application must be able to serve pages that have been recently viewed.`}</p>\n    <p>{`Applications implement these features with the help of a client-side cache.\nAfter the application fetches network data, it stores that resource in a local cache.\nOnce a resource has been cached, the service worker uses the cache on future requests for that resource to boost performance.`}</p>\n    <h2 {...{\n      \"id\": \"service-worker-caching\"\n    }}>{`Service Worker caching`}</h2>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/ilt/pwa/introduction-to-service-worker\"\n      }}>{`service worker`}</a>{` is a JavaScript file that runs in a separate thread from the main execution thread in a web application.\nService workers can intercept network requests and fetch cached data or store results from a network request into the cache.`}</p>\n    <h3 {...{\n      \"id\": \"venia-service-worker\"\n    }}>{`Venia service worker`}</h3>\n    <p>{`Venia's service worker uses Google's `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/tools/workbox/\"\n      }}>{`Workbox`}</a>{` library.\nIts behavior is defined in files inside the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-concept/src/ServiceWorker/\"\n      }}>{`src/ServiceWorker/`}</a>{` directory.`}</p>\n    <p>{`You do not need to use Workbox to define service worker behavior, but\nWorkbox makes this task easier by removing boilerplate code that is always used when working with service workers.`}</p>\n    <p>{`Venia uses the following `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/tools/workbox/modules/workbox-strategies\"\n      }}>{`caching strategies`}</a>{` with its service worker:`}</p>\n    <h4 {...{\n      \"id\": \"stale-while-revalidate\"\n    }}>{`Stale-while-revalidate`}</h4>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate\"\n      }}>{`stale-while-revalidate`}</a>{` strategy tells the service worker to use a cached response if it exists.\nA separate network request is made for that resource and the cache is updated for future requests.`}</p>\n    <p>{`This strategy is used when the most up to date version of a resource is not necessary for an application.`}</p>\n    {\n      /* prettier-ignore-start */\n    }\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Route pattern`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The application root`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/.`}{`\\\\`}{`.js$`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`JavaScript files`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/\\\\/media\\\\/catalog.*`}{`.`}{`(?:png`}{`|`}{`gif`}{`|`}{`jpg`}{`|`}{`jpeg`}{`|`}{`svg)$/`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Catalog image files`}</td>\n        </tr>\n      </tbody>\n    </table>\n    {\n      /* prettier-ignore-end */\n    }\n    <h4 {...{\n      \"id\": \"network-first\"\n    }}>{`Network first`}</h4>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache\"\n      }}>{`network first`}</a>{` strategy tells the service worker to get a resource from the network first.\nIf a network connection cannot be made, the service worker uses the cache as a fallback.`}</p>\n    <p>{`This strategy is used for data that may change frequently on the server.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Route pattern`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\\\\`}{`.html$`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTML pages`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"cache-first\"\n    }}>{`Cache first`}</h4>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network\"\n      }}>{`cache first`}</a>{` strategy tells the service worker to use the data from the cache.\nUnlike the stale-while-revalidate strategy, no network call is made to update the cache.`}</p>\n    <p>{`If a response is not found in the cache, a network call is made to get the resource and cache the response.`}</p>\n    <p>{`This strategy is used for non-critical assets that do not get updated very often.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Route pattern`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`images`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Image files served from the application`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"caching-in-the-apollo-graphql-client\"\n    }}>{`Caching in the Apollo GraphQL client`}</h2>\n    <p>{`The Venia implementation storefront uses the Apollo GraphQL client to make requests to the Magento GraphQL endpoint.\nIt also incorporates the default `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.apollographql.com/docs/react/advanced/caching\"\n      }}>{`InMemoryCache`}</a>{` implementation to add caching abilities to the client.`}</p>\n    <p>{`The cache is persisted between browser sessions in `}<inlineCode parentName=\"p\">{`window.localstorage`}</inlineCode>{` using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/apollographql/apollo-cache-persist\"\n      }}>{`apollo-cache-persist`}</a>{` module.\nThis lets the Apollo client maintain its cached data even when the user closes the application.`}</p>\n    <p>{`By default, InMemoryCache uses a cache first strategy for all queries.\nThis strategy is set using the `}<inlineCode parentName=\"p\">{`fetchPolicy`}</inlineCode>{` prop on the `}<inlineCode parentName=\"p\">{`Query`}</inlineCode>{` component.`}</p>\n    <p>{`Caching for Apollo is set up in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/master/packages/venia-ui/lib/drivers/adapter.js\"\n      }}>{`src/drivers/adapter.js`}</a>{` file.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}