{"version":3,"file":"component---src-pages-tutorials-events-subscribe-events-index-md-1803808bc2b274a7cfb9.js","mappings":"4RAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,yBADR,0BAGA,2HACA,0BAAW,cAAGC,WAAW,IACrB,KAAQ,gGADD,yBAAX,8CAGA,6BAAc,uBAAYA,WAAW,KAAvB,WAAd,gCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,uvCAoCR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/tutorials/events/subscribe-events/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"subscribing-to-events\"\n    }}>{`Subscribing to events`}</h1>\n    <p>{`Third-party modules can subscribe to events, allowing you to use other analytics collection schemes.`}</p>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/tree/develop/packages/extensions/venia-sample-eventing\"\n      }}>{`venia-sample-eventing`}</a>{` module shows how to subscribe to events.`}</p>\n    <p>{`Within `}<inlineCode parentName=\"p\">{`main.js`}</inlineCode>{`, the subscription code is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const [observable, { dispatch }] = useEventingContext();\n\n    useEffect(() => {\n        const sub = observable.subscribe(async event => {\n            switch (event.type) {\n                case 'CART_PAGE_VIEW':\n                    console.log('Logging event:', {\n                        type: event.type,\n                        ...event.payload,\n                        products: formatCartProducts(event.payload.products)\n                    });\n                    break;\n                case 'CHECKOUT_PAGE_VIEW':\n                    console.log('Logging event:', {\n                        type: event.type,\n                        ...event.payload,\n                        products: formatCartProducts(event.payload.products)\n                    });\n                    break;\n                case 'ORDER_CONFIRMATION_PAGE_VIEW':\n                    console.log('Logging event:', {\n                        type: event.type,\n                        ...event.payload,\n                        products: formatCartProducts(event.payload.products)\n                    });\n                    break;\n                default:\n                    console.log('Logging event:', event);\n                    break;\n            }\n        });\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}