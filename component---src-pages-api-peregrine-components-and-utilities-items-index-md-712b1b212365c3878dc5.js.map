{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/api/peregrine/components-and-utilities/Items/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,SADR,UAGA,0BAAW,uBAAYC,WAAW,KAAvB,SAAX,iEAA6H,cAAGA,WAAW,IACvI,KAAQ,sEACP,uBAAYA,WAAW,KAAvB,SAFL,iBAGA,qCAAsB,cAAGA,WAAW,IAChC,KAAQ,2CADU,aAAtB,sIAIA,0BAAW,uBAAYA,WAAW,KAAvB,SAAX,gDAA4G,cAAGA,WAAW,IACtH,KAAQ,sEACP,uBAAYA,WAAW,KAAvB,SAFL,gBAGA,eACE,GAAM,SADR,UAGA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,SAGA,eAAIA,WAAW,KACb,MAAS,UADX,aAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,WACH,eAAIA,WAAW,KACb,MAAS,WACR,mBAAQA,WAAW,MAAnB,SACH,eAAIA,WAAW,KACb,MAAS,MADX,4BAE+B,uBAAYA,WAAW,MAAvB,eAF/B,6BAEoH,cAAGA,WAAW,KAC9H,KAAQ,wFADwG,UAItH,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,gBACH,eAAIA,WAAW,KACb,MAAS,UADX,OAGA,eAAIA,WAAW,KACb,MAAS,MADX,MAES,cAAGA,WAAW,KACnB,KAAQ,8CADH,eAFT,8BAMF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,oBACH,eAAIA,WAAW,KACb,MAAS,UADX,OAGA,eAAIA,WAAW,KACb,MAAS,MADX,oDAMN,eACE,GAAM,oBADR,qBAGA,0BAAW,uBAAYA,WAAW,KAAvB,kBAAX,6CACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAApB,eACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,eAEtB,eACE,GAAM,WADR,YAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,kRAoBTJ,EAAWK,gBAAiB","file":"component---src-pages-api-peregrine-components-and-utilities-items-index-md-712b1b212365c3878dc5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"items\"\n    }}>{`Items`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Items`}</inlineCode>{` component uses content in a data object to render a list of `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/peregrine/components-and-utilities/Item/\"\n      }}><inlineCode parentName=\"a\">{`Item`}</inlineCode></a>{` components.`}</p>\n    <p>{`It follows the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/fragments.html\"\n      }}>{`Fragments`}</a>{` pattern and returns its children without a wrapping element.\nThis allows you to decide how you want to wrap your list of items.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Items`}</inlineCode>{` component is used as a direct child of the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/peregrine/components-and-utilities/List/\"\n      }}><inlineCode parentName=\"a\">{`List`}</inlineCode></a>{` component.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`items`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><strong parentName=\"td\">{`Yes`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An iterable that yields `}<inlineCode parentName=\"td\">{`[key, item]`}</inlineCode>{` pairs such as an ES2015 `}<a parentName=\"td\" {...{\n              \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\"\n            }}>{`Map`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`renderItem`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A `}<a parentName=\"td\" {...{\n              \"href\": \"https://reactjs.org/docs/render-props.html\"\n            }}>{`render prop`}</a>{` or HTML tagname string.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`selectionModel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A string corresponding to a selection model.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"selection-models\"\n    }}>{`Selection models`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`selectionModel`}</inlineCode>{` currently accepts the following values:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`radio`}</strong>{` (default)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`checkbox`}</strong></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import Items from \"@magento/peregrine\";\n\nconst data = {\n  s: { id: \"s\", value: \"Small\" },\n  m: { id: \"m\", value: \"Medium\" },\n  l: { id: \"l\", value: \"Large\" },\n};\n\n<Items\n  items={Object.entries(data)}\n  renderItem=\"option\"\n  selectionModel=\"checkbox\"\n/>;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}