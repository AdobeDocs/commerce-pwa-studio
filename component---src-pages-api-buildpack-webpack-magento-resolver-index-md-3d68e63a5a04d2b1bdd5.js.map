{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/api/buildpack/webpack/magento-resolver/index.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"mappings":"0OAUsBA,E,wEAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,oBADR,qBAGA,oKACuD,cAAGC,WAAW,IACjE,KAAQ,kDACP,uBAAYA,WAAW,KAAvB,YAHL,yJAKA,eACE,GAAM,OADR,QAGA,uPACA,eACE,GAAM,qBACL,uBAAYA,WAAW,MAAvB,wBACH,mBAAG,mBAAQA,WAAW,KAAnB,iBACH,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,YAApB,qGAA8K,uBAAYA,WAAW,MAAvB,QAA9K,mEAEF,mBAAG,mBAAQA,WAAW,KAAnB,aACH,wBAAS,cAAGA,WAAW,IACnB,KAAQ,iFADH,WAAT,qCAGA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,mBAAG,uBAAYC,WAAW,KAAvB,+BAAH,sBACA,eACE,GAAM,WADR,YAGA,yBAAU,uBAAYA,WAAW,KAAvB,qBAAV,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,6YAqBL,kCAAmB,uBAAYA,WAAW,KAAvB,aAAnB,wOAEA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,mEAAoD,uBAAYC,WAAW,KAAvB,eAApD,gDAKJH,EAAWM,gBAAiB","file":"component---src-pages-api-buildpack-webpack-magento-resolver-index-md-3d68e63a5a04d2b1bdd5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"magento-resolver\"\n    }}>{`Magento resolver`}</h1>\n    <p>{`An adapter that configures Webpack to resolve assets using Magento PWA conventions.\nThis module generates a configuration object used in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/configuration/resolve/\"\n      }}><inlineCode parentName=\"a\">{`resolve`}</inlineCode></a>{` property of a Webpack config.\nThe configuration object tells Webpack how to traverse the filesystem structure for assets required in source files.`}</p>\n    <h2 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h2>\n    <p>{`Currently, MagentoResolver does very little, but it's likely that the Magento development environment will require custom resolution rules in the future; this utility sets the precedent of the API for delivering those rules.`}</p>\n    <h3 {...{\n      \"id\": \"configureoptions\"\n    }}><inlineCode parentName=\"h3\">{`configure(options)`}</inlineCode></h3>\n    <p><strong parentName=\"p\">{`Parameters:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options:`}</inlineCode>{` - Configuration object that describes where the PWA storefront folders are located. Must have a `}<inlineCode parentName=\"li\">{`root`}</inlineCode>{` property set to the context (root directory) of the project.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Return:`}</strong></p>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/configuration/configuration-types/#exporting-a-promise\"\n      }}>{`Promise`}</a>{` configuration type for webpack.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><inlineCode parentName=\"p\">{`MagentoResolver.configure()`}</inlineCode>{` is asynchronous.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const buildpack = require('@magento/pwa-buildpack');\nconst MagentoResolver = buildpack.Webpack.MagentoResolver;\n\nmodule.exports = async env => {\n    const config {\n        /* webpack entry, output, rules, etc */\n\n\n        resolve: await MagentoResolver.configure({\n            paths: {\n                root: __dirname\n            }\n        })\n\n    };\n\n    return config;\n}\n`}</code></pre>\n    <p>{`The special `}<inlineCode parentName=\"p\">{`__dirname`}</inlineCode>{` variable in Node always refers to the directory containing the currently executing script file.\nThis is different from the \"working directory\", which is the current directory of the shell when the current process was started.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The example provided uses the newer, cleaner `}<inlineCode parentName=\"p\">{`async/await`}</inlineCode>{` syntax instead of using Promises directly.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}