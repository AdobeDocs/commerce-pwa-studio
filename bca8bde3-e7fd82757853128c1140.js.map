{"version":3,"sources":["webpack://dev-site-documentation-template/./node_modules/@adobe/gatsby-theme-aio/src/components/GlobalHeader/index.js"],"names":["GlobalHeader","ims","isLoadingIms","menu","versions","pages","docs","location","toggleSideNav","hasSideNav","tabsRef","useRef","tabsContainerRef","selectedTabIndicatorRef","useState","isAnimated","setIsAnimated","tabs","versionPopover","profilePopover","openVersion","setOpenVersion","openProfile","setOpenProfile","profile","setProfile","isLoadingProfile","setIsLoadingProfile","versionPopoverId","nextId","profilePopoverId","hasMenu","getSelectedTabIndex","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTabIndex","indexOf","findSelectedTopPage","positionSelectedTabIndicator","selectedTab","filter","tab","current","scrollLeft","offsetLeft","positionIndicator","useEffect","animateIndicator","isSignedInUser","getProfile","getBoundingClientRect","top","left","style","position","setTimeout","onClick","event","length","contains","target","document","addEventListener","removeEventListener","onScroll","passive","role","css","aria-label","DESKTOP_SCREEN_WIDTH","isQuiet","TripleGripper","href","Adobe","className","elementType","getExternalLinkProps","ref","onFontsReady","map","page","i","title","path","createRef","push","Fragment","key","GatsbyLink","to","selected","isOpen","aria-controls","stopPropagation","nativeEvent","stopImmediatePropagation","open","id","variant","version","isFirst","isSelected","isHighlighted","A","process","GATSBY_IMS_SRC","GATSBY_IMS_CONFIG","size","hidden","signIn","alt","src","avatarUrl","userId","displayName","signOut"],"mappings":"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","file":"bca8bde3-e7fd82757853128c1140.js","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Fragment, useRef, useEffect, useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport nextId from 'react-id-generator';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { findSelectedTopPage, rootFix, rootFixPages, getExternalLinkProps, DESKTOP_SCREEN_WIDTH } from '../../utils';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport { Button } from '../Button';\nimport { ProgressCircle } from '../ProgressCircle';\nimport { Adobe, TripleGripper } from '../Icons';\nimport { ActionButton, Text as ActionButtonLabel } from '../ActionButton';\nimport { PickerButton } from '../Picker';\nimport { Menu, Item as MenuItem } from '../Menu';\nimport { Popover } from '../Popover';\nimport { Image } from '../Image';\nimport { Tabs, Item as TabsItem, TabsIndicator, positionIndicator, animateIndicator } from '../Tabs';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/assetlist';\nimport { Divider } from '../Divider';\n\nconst GlobalHeader = ({ ims, isLoadingIms, menu, versions, pages, docs, location, toggleSideNav, hasSideNav }) => {\n  const tabsRef = useRef(null);\n  const tabsContainerRef = useRef(null);\n  const selectedTabIndicatorRef = useRef(null);\n  // Don't animate the tab indicator by default\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [tabs] = useState([]);\n  const versionPopover = useRef(null);\n  const profilePopover = useRef(null);\n  const [openVersion, setOpenVersion] = useState(false);\n  const [openProfile, setOpenProfile] = useState(false);\n  const [profile, setProfile] = useState(null);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(true);\n\n  const versionPopoverId = nextId();\n  const profilePopoverId = nextId();\n  const hasMenu = menu || menu === null;\n\n  const getSelectedTabIndex = () => {\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n\n    let selectedTabIndex = pagesWithRootFix.indexOf(findSelectedTopPage(pathWithRootFix, pagesWithRootFix));\n\n    // Assume first tab is selected\n    if (selectedTabIndex === -1) {\n      selectedTabIndex = 0;\n    }\n\n    return selectedTabIndex;\n  };\n\n  const positionSelectedTabIndicator = () => {\n    const selectedTabIndex = getSelectedTabIndex();\n    const selectedTab = tabs.filter((tab) => tab.current)[selectedTabIndex];\n\n    tabsContainerRef.current.scrollLeft = selectedTab.current.offsetLeft;\n    positionIndicator(selectedTabIndicatorRef, selectedTab);\n  };\n\n  useEffect(() => {\n    animateIndicator(selectedTabIndicatorRef, isAnimated);\n    positionSelectedTabIndicator();\n  }, [location.pathname]);\n\n  useEffect(() => {\n    (async () => {\n      if (ims && ims.isSignedInUser()) {\n        const profile = await ims.getProfile();\n        setProfile(profile);\n        setIsLoadingProfile(false);\n      } else if (!isLoadingIms) {\n        setIsLoadingProfile(false);\n      }\n    })();\n  }, [ims]);\n\n  useEffect(() => {\n    if (versionPopover.current) {\n      if (openVersion) {\n        const { top, left } = versionPopover.current.getBoundingClientRect();\n\n        versionPopover.current.style.left = `${left + 13}px`;\n        versionPopover.current.style.top = `${top}px`;\n        versionPopover.current.style.position = 'fixed';\n      } else {\n        // Wait for animation to finish\n        setTimeout(() => {\n          versionPopover.current.style = '';\n        }, 200);\n      }\n    }\n  }, [openVersion]);\n\n  useEffect(() => {\n    // Clicking outside of menu should close menu\n    const onClick = (event) => {\n      if (versions?.length && !versionPopover.current.contains(event.target)) {\n        setOpenVersion(false);\n      }\n\n      if (!profilePopover.current.contains(event.target)) {\n        setOpenProfile(false);\n      }\n    };\n\n    document.addEventListener('click', onClick);\n\n    return () => document.removeEventListener('click', onClick);\n  }, []);\n\n  useEffect(() => {\n    const onScroll = () => {\n      setOpenVersion(false);\n    };\n\n    tabsContainerRef.current.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => tabsContainerRef.current.removeEventListener('scroll', onScroll);\n  }, []);\n\n  return (\n    <header\n      role=\"banner\"\n      css={css`\n        height: 100%;\n        border-bottom: var(--spectrum-global-dimension-size-10) solid var(--spectrum-global-color-gray-200);\n        box-sizing: border-box;\n      `}>\n      <nav\n        css={css`\n          height: 100%;\n        `}\n        role=\"navigation\"\n        aria-label=\"Global\">\n        <div\n          css={css`\n            display: grid;\n            grid-template-areas: 'title navigation optional';\n            grid-template-columns: minmax(auto, min-content) auto minmax(auto, min-content);\n            align-items: center;\n            margin-left: var(--spectrum-global-dimension-size-400);\n            margin-right: var(--spectrum-global-dimension-size-400);\n            height: 100%;\n\n            @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n              grid-template-columns: minmax(auto, min-content) auto 0 0;\n              margin-right: 0;\n              margin-left: 0;\n              height: calc(100% + var(--spectrum-global-dimension-size-10));\n              overflow: hidden;\n            }\n          `}>\n          <div\n            css={css`\n              height: 100%;\n              grid-area: title;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                height: 100%;\n                align-items: center;\n              `}>\n              <div\n                css={css`\n                  display: flex;\n                  align-items: center;\n                `}>\n                <div\n                  css={css`\n                    margin-right: var(--spectrum-global-dimension-size-50);\n                    display: none;\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                      visibility: ${hasSideNav ? 'visible' : 'hidden'};\n                    }\n                  `}>\n                  <ActionButton\n                    isQuiet\n                    onClick={() => {\n                      toggleSideNav && toggleSideNav();\n                    }}>\n                    <TripleGripper />\n                  </ActionButton>\n                </div>\n                <a\n                  href=\"/\"\n                  css={css`\n                    text-decoration: none;\n                  `}>\n                  <div\n                    css={css`\n                      display: flex;\n                      align-items: center;\n\n                      @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                        svg {\n                          margin-right: var(--spectrum-global-dimension-size-100);\n                        }\n\n                        strong {\n                          display: none;\n                        }\n                      }\n                    `}>\n                    <Adobe\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-300);\n                        height: var(--spectrum-global-dimension-size-250);\n                        display: block;\n                        margin-right: var(--spectrum-global-dimension-size-100);\n                      `}\n                    />\n                    <strong className=\"spectrum-Heading spectrum-Heading--sizeXXS\">Developer</strong>\n                  </div>\n                </a>\n              </div>\n\n              {hasMenu && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-300);\n                    box-sizing: border-box;\n                    padding: var(--spectrum-global-dimension-size-200) var(--spectrum-global-dimension-size-300) 0\n                      var(--spectrum-global-dimension-size-300);\n                    height: calc(100% + var(--spectrum-global-dimension-size-10));\n                    border-left: 1px solid var(--spectrum-global-color-gray-200);\n                    border-right: 1px solid var(--spectrum-global-color-gray-200);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: none;\n                    }\n                  `}>\n                  <ActionButton elementType=\"a\" isQuiet href=\"/apis\" {...getExternalLinkProps()}>\n                    <ActionButtonLabel>Discover</ActionButtonLabel>\n                  </ActionButton>\n                </div>\n              )}\n            </div>\n          </div>\n          <div\n            ref={tabsContainerRef}\n            css={css`\n              grid-area: navigation;\n              margin-left: ${hasMenu\n                ? 'var(--spectrum-global-dimension-size-200)'\n                : 'var(--spectrum-global-dimension-size-300)'};\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                overflow-x: auto;\n                overflow-x: overlay;\n                overflow-y: hidden;\n                margin-right: var(--spectrum-global-dimension-size-800);\n\n                .spectrum-Tabs {\n                  padding-bottom: var(--spectrum-global-dimension-size-400);\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                }\n\n                .spectrum-Tabs-selectionIndicator {\n                  bottom: calc(\n                    var(--spectrum-global-dimension-size-400) - var(--spectrum-global-dimension-size-125)\n                  ) !important;\n                }\n              }\n            `}>\n            <Tabs\n              ref={tabsRef}\n              onFontsReady={() => {\n                positionSelectedTabIndicator();\n                setIsAnimated(true);\n              }}>\n              {hasMenu && (\n                <div\n                  css={css`\n                    display: none;\n                    margin-right: var(--spectrum-global-dimension-size-300);\n\n                    @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                      display: block;\n                    }\n                  `}>\n                  <TabsItem elementType=\"a\" href=\"/apis\">\n                    Discover\n                  </TabsItem>\n                </div>\n              )}\n              {pages.map((page, i) => {\n                const { title, path } = page;\n                const ref = createRef();\n                tabs.push(ref);\n\n                return (\n                  <Fragment key={i}>\n                    <TabsItem elementType={GatsbyLink} ref={ref} to={path} selected={getSelectedTabIndex() === i}>\n                      {title}\n                    </TabsItem>\n                    {i === 0 && versions?.length > 0 && (\n                      <div\n                        css={css`\n                          margin-left: var(--spectrum-global-dimension-size-100) !important;\n                          margin-right: var(--spectrum-global-dimension-size-300);\n                        `}>\n                        <PickerButton\n                          isQuiet\n                          isOpen={openVersion}\n                          aria-controls={versionPopoverId}\n                          onClick={(event) => {\n                            event.stopPropagation();\n                            event.nativeEvent.stopImmediatePropagation();\n\n                            setOpenVersion((open) => !open);\n                          }}>\n                          {versions[0].title}\n                        </PickerButton>\n                        <Popover\n                          ref={versionPopover}\n                          id={versionPopoverId}\n                          variant=\"picker\"\n                          isQuiet\n                          isOpen={openVersion}>\n                          <Menu>\n                            {versions.map((version, i) => {\n                              const isFirst = i === 0;\n\n                              return (\n                                <MenuItem key={i} isSelected={isFirst} isHighlighted={isFirst} href={version.path}>\n                                  {version.title}\n                                </MenuItem>\n                              );\n                            })}\n                          </Menu>\n                        </Popover>\n                      </div>\n                    )}\n                  </Fragment>\n                );\n              })}\n              <TabsIndicator\n                ref={selectedTabIndicatorRef}\n                css={css`\n                  bottom: calc(-1 * var(--spectrum-global-dimension-size-125)) !important;\n                `}\n              />\n              {docs && (\n                <div\n                  css={css`\n                    margin-left: var(--spectrum-global-dimension-size-400);\n                    white-space: nowrap;\n                  `}>\n                  <AnchorButton variant=\"primary\" href={docs.path}>\n                    {docs.title ?? 'View Docs'}\n                  </AnchorButton>\n                </div>\n              )}\n            </Tabs>\n          </div>\n          <div\n            css={css`\n              grid-area: optional;\n              justify-self: flex-end;\n            `}>\n            <div\n              css={css`\n                display: flex;\n              `}>\n              <AnchorButton\n                variant=\"primary\"\n                href=\"https://console.adobe.io\"\n                css={css`\n                  @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                    display: none;\n                  }\n                `}>\n                Console\n              </AnchorButton>\n\n              {process.env.GATSBY_IMS_SRC && process.env.GATSBY_IMS_CONFIG && (\n                <div\n                  css={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-left: var(--spectrum-global-dimension-size-200);\n                    width: var(--spectrum-global-dimension-size-800);\n                  `}>\n                  <ProgressCircle size=\"S\" hidden={!isLoadingIms} />\n\n                  <ActionButton\n                    css={css`\n                      margin-top: calc(-1 * var(--spectrum-global-dimension-size-25));\n                    `}\n                    hidden={isLoadingIms || isLoadingProfile || profile}\n                    variant=\"primary\"\n                    isQuiet\n                    onClick={() => {\n                      ims.signIn();\n                    }}>\n                    <ActionButtonLabel>Sign in</ActionButtonLabel>\n                  </ActionButton>\n\n                  <div hidden={!profile}>\n                    <div\n                      aria-controls={profilePopoverId}\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        event.nativeEvent.stopImmediatePropagation();\n\n                        setOpenProfile((open) => !open);\n                      }}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-400);\n                        height: var(--spectrum-global-dimension-size-400);\n                        border-radius: var(--spectrum-global-dimension-static-percent-50);\n                        background: var(--spectrum-global-color-gray-50);\n                        overflow: hidden;\n                        cursor: pointer;\n                      `}>\n                      <Image alt=\"Avatar\" src={profile ? ims.avatarUrl(profile.userId) : ''} />\n                    </div>\n                    <Popover\n                      id={profilePopoverId}\n                      ref={profilePopover}\n                      isOpen={openProfile}\n                      css={css`\n                        width: var(--spectrum-global-dimension-size-3400);\n                        max-height: var(--spectrum-global-dimension-size-4600);\n                        margin-left: calc(-1 * var(--spectrum-global-dimension-size-3000));\n                      `}>\n                      <div\n                        css={css`\n                          display: flex;\n                          align-items: center;\n                          justify-content: center;\n                          flex-direction: column;\n                        `}>\n                        <div\n                          css={css`\n                            width: var(--spectrum-global-dimension-size-800);\n                            height: var(--spectrum-global-dimension-size-800);\n                            border-radius: var(--spectrum-global-dimension-static-percent-50);\n                            background: var(--spectrum-global-color-gray-50);\n                            overflow: hidden;\n                            margin-top: var(--spectrum-global-dimension-size-400);\n                            margin-bottom: var(--spectrum-global-dimension-size-200);\n                          `}>\n                          <Image alt=\"Avatar\" src={profile ? ims.avatarUrl(profile.userId) : ''} />\n                        </div>\n\n                        <div\n                          className=\"spectrum-Heading spectrum-Heading--sizeL spectrum-Heading--light\"\n                          css={css`\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            text-align: center;\n                          `}>\n                          {profile && profile.displayName}\n                        </div>\n\n                        <div\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                            padding: 0 var(--spectrum-global-dimension-size-200);\n                            box-sizing: border-box;\n                            width: 100%;\n                          `}>\n                          <Divider size=\"S\" />\n                        </div>\n\n                        <AnchorButton href=\"https://account.adobe.com/\" variant=\"primary\" isQuiet>\n                          Edit Profile\n                        </AnchorButton>\n\n                        <Button\n                          variant=\"primary\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-200) 0;\n                          `}\n                          onClick={() => {\n                            ims.signOut();\n                          }}>\n                          Sign out\n                        </Button>\n                      </div>\n                    </Popover>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nGlobalHeader.propTypes = {\n  menu: PropTypes.bool,\n  pages: PropTypes.array,\n  docs: PropTypes.object,\n  location: PropTypes.object,\n  toggleSideNav: PropTypes.func,\n  hasSideNav: PropTypes.bool\n};\n\nexport { GlobalHeader };\n"],"sourceRoot":""}