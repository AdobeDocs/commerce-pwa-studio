{"version":3,"file":"component---src-pages-api-buildpack-targetables-single-import-statement-index-md-2545f37c00c1516f98b1.js","mappings":"6SAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAO/BA,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAACD,QAAQ,UACdF,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,yCAAmCA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,yBAAuC,YACpGJ,EAAAA,EAAAA,KAAA,MACE,GAAM,yCAAuC,aAC/BA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,MAAI,yBAAuC,YAClFJ,EAAAA,EAAAA,KAAA,4EAAsEA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,yBAAuC,aACvIJ,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMI,WAAW,MAClB,UAAa,eAAa,oHAK9BJ,EAAAA,EAAAA,KAAA,mEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMI,WAAW,MAClB,UAAa,eAAa,8HAO9BJ,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,qBAAeA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,mBAAiC,mEAC1EJ,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMI,WAAW,MAClB,UAAa,eAAa,2LAO9BJ,EAAAA,EAAAA,KAAA,mEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMI,WAAW,MAClB,UAAa,eAAa,4IAO9BJ,EAAAA,EAAAA,KAAA,MACE,GAAM,0CAAwC,cAC/BA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,MAAI,yBAAuC,YACnFJ,EAAAA,EAAAA,KAAA,iBAAWA,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,cAA4B,gBAAgBJ,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,yBAAuC,gCAAgCJ,EAAAA,EAAAA,KAAA,cAAYI,WAAW,KAAG,WAAyB,2GAErOJ,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMI,WAAW,MAClB,UAAa,gBAAc,qcAanC,CAEAV,EAAWW,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/targetables/SingleImportStatement/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/targetables/SingleImportStatement.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"singleimportstatement\"\n    }}>{`SingleImportStatement`}</h1>\n    {/*\n     The reference doc content is generated automatically from the source code.\n     To update this section, update the doc blocks in the source code\n     */}\n\n    <Docs mdxType=\"Docs\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Code examples for using the `}<inlineCode parentName=\"p\">{`SingleImportStatement`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"create-a-singleimportstatement-object\"\n    }}>{`Create a `}<inlineCode parentName=\"h3\">{`SingleImportStatement`}</inlineCode>{` object`}</h3>\n    <p>{`Pass in an import statement to the constructor to create a new `}<inlineCode parentName=\"p\">{`SingleImportStatement`}</inlineCode>{` object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const queryHookImport = new SingleImportStatement(\n  \"import { useQuery } from '@apollo/react-hooks'\"\n);\n`}</code></pre>\n    <p>{`This creates an object with the following properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  statement: \"import { useQuery } from '@apollo/react-hooks'\",\n  binding: 'useQuery',\n  imported: 'useQuery'\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"change-the-binding\"\n    }}>{`Change the binding`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`changeBinding()`}</inlineCode>{` function to rename the variable bound to the imported object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const queryHookImport = new SingleImportStatement(\n  \"import { useQuery } from '@apollo/react-hooks'\"\n);\n\nconst queryHookImport2 = useQueryImport.changeBinding(\"useQuery2\");\n`}</code></pre>\n    <p>{`This creates an object with the following properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`{\n  statement: \"import { useQuery as useQuery2 } from '@apollo/react-hooks'\",\n  binding: 'useQuery2',\n  imported: 'useQuery'\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-the-singleimportstatement-object\"\n    }}>{`Using the `}<inlineCode parentName=\"h3\">{`SingleImportStatement`}</inlineCode>{` object`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`toString()`}</inlineCode>{` value of a `}<inlineCode parentName=\"p\">{`SingleImportStatement`}</inlineCode>{` object is the value of the `}<inlineCode parentName=\"p\">{`binding`}</inlineCode>{` property.\nUse this to reference the component's local name when adding custom code with Targetables.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// You can skip 'import' and the class is able to understand what you mean\nlet Button = new SingleImportStatement(\"Button from './button'\");\n\n// later, you learn there is a conflict with the \\`Button\\` identifier,\n// so you generate a unique identifier\nButton = Button.changeBinding(generateUniqueIdentifier());\n\n// this renders the new identifier for your Button import in the final code\nconst jsx = \\`<\\${Button}>hello world</\\${Button}>\\`;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","Docs","parentName","isMDXComponent"],"sourceRoot":""}