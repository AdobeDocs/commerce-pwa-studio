{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/api/peregrine/talons/CartPage/PriceAdjustments/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+TASaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,mBADR,oBAGA,oHAQA,SAAC,IAAD,CAAWA,QAAQ,eACnB,eACE,GAAM,YADR,aAGA,eACE,GAAM,iBADR,oBAGA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,gBADZ,knCAkDL,eACE,GAAM,oBADR,qBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,y4DAoETJ,EAAWK,gBAAiB","file":"component---src-pages-api-peregrine-talons-cart-page-price-adjustments-index-md-2fea3864cf7c56dc287a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Component from '/src/data/auto-generated/peregrine/lib/talons/CartPage/PriceAdjustments/useCouponCode.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"priceadjusments\"\n    }}>{`PriceAdjusments`}</h1>\n    <p>{`These talons provide logic for components that may adjust the total price in a shopping cart.`}</p>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Component mdxType=\"Component\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <h3 {...{\n      \"id\": \"usecouponcode\"\n    }}>{`useCouponCode()`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react'\n\nimport { useCouponCode } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/useCouponCode';\n\nimport {\n    GET_APPLIED_COUPONS,\n    APPLY_COUPON_MUTATION,\n    REMOVE_COUPON_MUTATION\n} from './myCouponCodeQueries'\n\nconst MyCouponCode = props => {\n\n    const talonProps = useCouponCode({\n        setIsCartUpdating: props.setIsCartUpdating,\n        mutations: {\n            applyCouponMutation: APPLY_COUPON_MUTATION,\n            removeCouponMutation: REMOVE_COUPON_MUTATION\n        },\n        queries: {\n            getAppliedCouponsQuery: GET_APPLIED_COUPONS\n        }\n    });\n\n    const {\n        applyingCoupon,\n        data,\n        errorMessage,\n        fetchError,\n        handleApplyCoupon,\n        handleRemoveCoupon,\n        removingCoupon\n    } = talonProps;\n\n    if (!data) {\n        return null;\n    }\n\n    if (fetchError) {\n        return 'Something went wrong. Refresh and try again.';\n    }\n\n    return (\n        // JSX for rendering a Coupon Code form and applied codes using props from the talon\n    )\n}\n\nexport default MyCouponCode\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"shipping-methods\"\n    }}>{`Shipping Methods`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport { useShippingMethods } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/ShippingMethods/useShippingMethods';\nimport { useShippingForm } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/ShippingMethods/useShippingForm';\nimport { useShippingRadios } from '@magento/peregrine/lib/talons/CartPage/PriceAdjustments/ShippingMethods/useShippingRadios';\n\nimport { GET_SHIPPING_METHODS, SET_SHIPPING_ADDRESS_MUTATION, SET_SHIPPING_METHOD_MUTATION } from './myShippingMethods.gql';\n\nconst MyShippingMethods = props => {\n    const { setIsCartUpdating } = props;\n\n    const shippingMethodsProps = useShippingMethods({\n        queries: GET_SHIPPING_METHODS\n    });\n\n    const {\n        hasMethods,\n        isShowingForm,\n        selectedShippingFields,\n        selectedShippingMethod,\n        shippingMethods,\n        showForm\n    } = shippingMethodsProps;\n\n    const shippingFormProps = useShippingForm({\n        selectedValues: selectedShippingFields,\n        setIsCartUpdating,\n        mutations: {\n            setShippingAddressMutation: SET_SHIPPING_ADDRESS_MUTATION\n        },\n        queries: {\n            shippingMethodsQuery: GET_SHIPPING_METHODS\n        }\n    });\n\n    const {\n        formErrors,\n        handleOnSubmit,\n        handleZipChange,\n        isSetShippingLoading\n    } = shippingFormProps;\n\n    const shippingRadioProps = useShippingRadios({\n        setIsCartUpdating,\n        selectedShippingMethod,\n        shippingMethods,\n        mutations: {\n            setShippingMethodMutation: SET_SHIPPING_METHOD_MUTATION\n        }\n    });\n\n    const {\n        formattedShippingMethods,\n        handleShippingSelection\n    } = shippingRadioProps;\n\n    return (\n        // JSX for rendering shipping methods form using props from the shipping methods talons\n    )\n}\n\nexport default MyShippingMethods\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}