"use strict";(self.webpackChunkcommerce_pwa_studio=self.webpackChunkcommerce_pwa_studio||[]).push([[7165],{77878:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return p},default:function(){return s}});var o=n(87462),t=n(63366),m=(n(15007),n(64983)),r=n(91515),i=["components"],p={},d={_frontmatter:p},l=r.Z;function s(e){var a=e.components,n=(0,t.Z)(e,i);return(0,m.mdx)(l,(0,o.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"install-the-commerce-metapackage"},"Install the Commerce metapackage"),(0,m.mdx)("p",null,"This metapackage is only required for PWA projects that target Adobe Commerce as the backend."),(0,m.mdx)("h2",{id:"prerequisite"},"Prerequisite"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"/metapackages/open-source/index.md"},"GraphQL metapackage")," in all projects using PWA Studio 12.1.0 and higher.")),(0,m.mdx)("h2",{id:"installation-as-a-git-based-composer-package"},"Installation as a git-based composer package"),(0,m.mdx)("p",null,"To setup and develop your PWA extension modules locally, use the following instructions."),(0,m.mdx)("ol",null,(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Clone the ",(0,m.mdx)("inlineCode",{parentName:"p"},"magento2-pwa-commerce")," repository into your Magento Commerce vendor directory name:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:magento/magento2-pwa-commerce.git ext/<vendor-directory-name>/magento2-pwa-commerce\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Update the ",(0,m.mdx)("inlineCode",{parentName:"p"},"magento2/composer.json")," settings to create a better development workflow for your extension modules:"),(0,m.mdx)("ul",{parentName:"li"},(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"Update the ",(0,m.mdx)("inlineCode",{parentName:"p"},"minimum-stability")," for packages to ",(0,m.mdx)("inlineCode",{parentName:"p"},"dev"),". This allows for the installation of development modules:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"composer config minimum-stability dev\n"))),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"To work with ",(0,m.mdx)("inlineCode",{parentName:"p"},"stable")," packages, ensure that the ",(0,m.mdx)("inlineCode",{parentName:"p"},"prefer-stable")," property is ",(0,m.mdx)("inlineCode",{parentName:"p"},"true"),". This property should already be included in the ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer.json")," file, right above the ",(0,m.mdx)("inlineCode",{parentName:"p"},"minimum-stability")," setting.")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},"Configure ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer")," to find new extension modules. The following command configures ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer")," to treat any extension code inside the ",(0,m.mdx)("inlineCode",{parentName:"p"},"ext")," directory as a package and creates a symlink to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"vendor")," directory:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},'composer config repositories.ext path "./ext/*/*/*"\n'))))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Install the ",(0,m.mdx)("inlineCode",{parentName:"p"},"pwa-commerce")," metapackage:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"composer require magento/pwa-commerce\n")))),(0,m.mdx)("p",null,"At this point, you should see symlinks for all the ",(0,m.mdx)("inlineCode",{parentName:"p"},"pwa-commerce")," modules inside the ",(0,m.mdx)("inlineCode",{parentName:"p"},"vendor")," directory. These symlinks allow you to:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},"Run a Magento installation with additional modules."),(0,m.mdx)("li",{parentName:"ul"},"Develop locally using the standard git workflow.")),(0,m.mdx)("p",null,"You may need to ensure that there are no ",(0,m.mdx)("inlineCode",{parentName:"p"},"Magento_PWA*")," modules listed as ",(0,m.mdx)("inlineCode",{parentName:"p"},"enabled")," when you run ",(0,m.mdx)("inlineCode",{parentName:"p"},"bin/magento module:status"),". If there are, ",(0,m.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/php/development/build/component-management/"},"follow the docs on how to enable modules"),"."),(0,m.mdx)("h2",{id:"setting-up-the-git-workflow"},"Setting up the Git workflow"),(0,m.mdx)("p",null,"To improve the developer experience even further, you can add these configurations as well:"),(0,m.mdx)("ol",null,(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Exclude all the ",(0,m.mdx)("inlineCode",{parentName:"p"},"ext")," directories in the project's ",(0,m.mdx)("inlineCode",{parentName:"p"},".git")," configuration:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"echo ext >> ./.git/info/exclude\n"))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Skip your project's root directory ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer.\\*")," files to avoid committing them by mistake:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"git update-index --skip-worktree composer.json && git update-index --skip-worktree composer.lock\n")),(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("strong",{parentName:"p"},"NOTE:")," You can reverse this operation anytime as needed:"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-bash"},"git update-index --no-skip-worktree composer.json && git update-index --no-skip-worktree composer.lock\n")))),(0,m.mdx)("h2",{id:"cloud-deployment-extension-installation"},"Cloud deployment extension installation"),(0,m.mdx)("ol",null,(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Add ",(0,m.mdx)("inlineCode",{parentName:"p"},"https://repo.magento.com")," as a composer repository by adding the following to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer.json")," file of your cloud instances."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-json"},'"repositories": {\n    "repo": {\n        "type": "composer",\n        "url": "https://repo.magento.com"\n    }\n},\n'))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Require in ",(0,m.mdx)("inlineCode",{parentName:"p"},"magento/magento2-pwa-commerce")," extension by adding the following to the ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer.json")," file of your cloud instances."),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-json"},'"require": {\n    "magento/magento2-pwa-commerce": "0.0.1"\n},\n'))),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Ensure your ",(0,m.mdx)("inlineCode",{parentName:"p"},"auth.json")," file has valid credentials for ",(0,m.mdx)("inlineCode",{parentName:"p"},"repo.magento.com"),".")),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Run ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer update")," to update your ",(0,m.mdx)("inlineCode",{parentName:"p"},"composer.lock")," file.")),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Push the changes and deploy your cloud instance."))))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-metapackages-commerce-index-md-976b6cfbf92bb4a8b2f8.js.map