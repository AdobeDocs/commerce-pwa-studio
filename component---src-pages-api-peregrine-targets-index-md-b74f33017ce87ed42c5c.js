"use strict";(self.webpackChunkcommerce_pwa_studio=self.webpackChunkcommerce_pwa_studio||[]).push([[7348],{14390:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return p},default:function(){return u}});var r=n(87462),a=n(63366),o=(n(15007),n(64983)),i=n(99536),m=n(59465),s=["components"],p={},d={_frontmatter:p},l=i.Z;function u(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.mdx)(l,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"peregrine-targets"},"Peregrine targets"),(0,o.mdx)("p",null,"Peregrine targets provide access to the custom React hooks and talons used in UI components."),(0,o.mdx)("h2",{id:"accessing-the-peregrine-targets"},"Accessing the Peregrine targets"),(0,o.mdx)("p",null,"Access these targets in your intercept files by calling ",(0,o.mdx)("inlineCode",{parentName:"p"},"targets.of('@magento/peregrine')")," on the TargetProvider object."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-js"},'/* my-custom-interceptors.js */\nmodule.exports = (targets) => {\n  const peregrineTargets = targets.of("@magento/peregrine");\n};\n')),(0,o.mdx)("p",null,"See the ",(0,o.mdx)("a",{parentName:"p",href:"https://github.com/magento-research/pwa-studio-target-experiments"},"PWA Studio Target Experiments")," project repository for documented examples of extensions that use PWA Studio's extensibility framework."),(0,o.mdx)("h2",{id:"wrapper-modules"},"Wrapper modules"),(0,o.mdx)("p",null,"You can extend the functionality of Peregrine's custom hooks and talons by applying wrapper modules."),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"talon.wrapWith(module)")," method is simlar to the ",(0,o.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/php/development/components/plugins/"},"interceptor pattern")," used in Magento backend plugins.\nPeregrine will dynamically inject the code from the passed ",(0,o.mdx)("inlineCode",{parentName:"p"},"module"),' "around" the implementation of a talon, by passing the talon function through the wrapper function before exporting it.'),(0,o.mdx)("p",null,"See the ",(0,o.mdx)("a",{parentName:"p",href:"/commerce-pwa-studio/tutorials/targets/modify-talon-results/"},"Modify talon results")," tutorial for step-by-step instructions on working with wrapper modules."),(0,o.mdx)("h3",{id:"requirements"},"Requirements"),(0,o.mdx)("p",null,"Wrapper modules for Peregrine must:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"be implemented in a separate file from the build-time Target code"),(0,o.mdx)("li",{parentName:"ul"},"be accessible in frontend code via an ",(0,o.mdx)("inlineCode",{parentName:"li"},"import")),(0,o.mdx)("li",{parentName:"ul"},"be a valid ES Module"),(0,o.mdx)("li",{parentName:"ul"},"export one default function that implements the same interface, i.e. it receives the original talon function as its parameter and must return a new talon function")),(0,o.mdx)("p",null,"Extensions which use wrapper modules ",(0,o.mdx)("em",{parentName:"p"},"must")," also intercept the ",(0,o.mdx)("a",{parentName:"p",href:"/commerce-pwa-studio/api/buildpack/targets/"},"Buildpack ",(0,o.mdx)("inlineCode",{parentName:"a"},"specialFeatures")," target")," and set the feature flag ",(0,o.mdx)("inlineCode",{parentName:"p"},"esModule: true"),"."),(0,o.mdx)(m.Z,{mdxType:"Targets"}))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-peregrine-targets-index-md-b74f33017ce87ed42c5c.js.map