{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/api/peregrine/hooks/useWindowSize/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+TASaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iBADR,oBAUA,SAAC,IAAD,CAAWA,QAAQ,eACnB,eACE,GAAM,YADR,aAGA,qIACA,qBAAK,iBAAMC,WAAW,MAClB,UAAa,gBADZ,gGAQL,sEAAuD,uBAAYA,WAAW,KAAvB,mBAAvD,sFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,gQAkBTJ,EAAWK,gBAAiB","file":"component---src-pages-api-peregrine-hooks-use-window-size-index-md-8564706457e8406b0b04.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Component from '/src/data/auto-generated/peregrine/lib/hooks/useWindowSize.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"usewindowsize\"\n    }}>{`useWindowSize()`}</h1>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Component mdxType=\"Component\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`It is recommended to only create/use the WindowSizeContextProvider a single time at the top level of your app:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`return (\n  <WindowSizeContextProvider>\n    <App />\n  </WindowSizeContextProvider>\n);\n`}</code></pre>\n    <p>{`Inside a component in your application, use the `}<inlineCode parentName=\"p\">{`useWindowSize()`}</inlineCode>{` function to get the window size value that updates when the window size changes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useWindowSize } from \"@magento/peregrine\";\n\nfunction MyComponent(props) {\n  const windowSize = useWindowSize();\n\n  return (\n    <span>\n      Inner window size: {windowSize.innerWidth} x {windowSize.innerHeight}\n    </span>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}