{"version":3,"file":"component---src-pages-tutorials-extensions-taglist-index-md-5809c5bee8f915675f11.js","mappings":"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","sources":["webpack://commerce-pwa-studio/./src/pages/tutorials/extensions/taglist/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"create-a-tag-list-extension\"\n    }}>{`Create a tag list extension`}</h1>\n    <p>{`A tag list is a group of tags associated with a product.\nThis tutorial provides steps for creating and installing an extension that displays a tag list on the product details page in a Venia-based storefront.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`Before you start this tutorial, make sure you have a storefront project set up using the steps outlined in the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/tutorials/setup-storefront/\"\n      }}>{`Setup your project`}</a>{` topic.\nThis is the storefront you will use to install your extension in this tutorial.`}</p>\n    <h2 {...{\n      \"id\": \"set-up-the-extension-project\"\n    }}>{`Set up the extension project`}</h2>\n    <p>{`Create a folder anywhere in your system and run Yarn's project creation script.\nThe script starts an interactive questionnaire that helps you fill out your project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir tagList && \\\\\ncd tagList && \\\\\nyarn init\n`}</code></pre>\n    <p>{`After answering the questions, the yarn CLI creates a `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file that looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"tagList\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A tag list extension for a PWA Studio storefront\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-taglist-component-files\"\n    }}>{`Create TagList component files`}</h2>\n    <p>{`The core purpose of this extension is to provide a React component that renders a list of tags.\nUse the following command to create a directory and the files that define this component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/TagList && \\\\\ntouch src/Taglist/index.js && \\\\\ntouch src/Taglist/tag.js && \\\\\ntouch src/Taglist/tag.css && \\\\\ntouch src/Taglist/tagList.js && \\\\\ntouch src/Taglist/tagList.css\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"indexjs\"\n    }}><inlineCode parentName=\"h3\">{`index.js`}</inlineCode></h3>\n    <p>{`Exporting modules from your component's `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file is a common standard in a React project.\nIt lets another component import the tag list component using the `}<inlineCode parentName=\"p\">{`TagList`}</inlineCode>{` directory name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* src/TagList/index.js */\n\nexport { default } from \"./tagList\";\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tagjs-and-tagcss\"\n    }}><inlineCode parentName=\"h3\">{`tag.js`}</inlineCode>{` and `}<inlineCode parentName=\"h3\">{`tag.css`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`tag.js`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tag.css`}</inlineCode>{` files define a Tag component that renders a single tag in the tag list.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/* src/TagList/tag.js */\n\nimport React from \"react\";\nimport Button from \"@magento/venia-ui/lib/components/Button\";\nimport { Link } from \"@magento/venia-ui/lib/drivers\";\n\nimport classes from \"./tag.css\";\n\nconst categoryUrlSuffix = \".html\";\n\n// This is a component responsible for rendering a single tag\nconst Tag = (props) => {\n  // Destructures the props object into variables\n  const { value } = props;\n\n  const { name, url_path } = value;\n  const url = \\`/\\${url_path}\\${categoryUrlSuffix}\\`;\n\n  const buttonClasses = {\n    root_lowPriority: classes.root,\n    content: classes.content,\n  };\n\n  return (\n    <Link className={classes.link} to={url}>\n      <Button classes={buttonClasses} priority=\"low\" type=\"button\">\n        {name}\n      </Button>\n    </Link>\n  );\n};\n\n// Make this function the default exported of this module\nexport default Tag;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* src/TagList.tag.css */\n\n.root {\n  border: solid 1px #2680eb;\n  padding: 3px 9px;\n  margin: 5px;\n  border-radius: 6px;\n}\n\n.content {\n  color: #2680eb;\n  font-size: 0.875rem;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"taglistjs-and-taglistcss\"\n    }}><inlineCode parentName=\"h3\">{`tagList.js`}</inlineCode>{` and `}<inlineCode parentName=\"h3\">{`tagList.css`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`tagList.js`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tagList.css`}</inlineCode>{` files define the main TagList component this package provides.\nIt accepts a `}<inlineCode parentName=\"p\">{`categoriesListData`}</inlineCode>{` object as a prop and renders the data as a tag list.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/* src/TagList/tagList.js */\n\nimport React from \"react\";\nimport Tag from \"./tag\";\n\nimport classes from \"./tagList.css\";\n\nconst TagList = (props) => {\n  // Destructures the props object into variables\n  const { categoriesListData } = props;\n\n  const { categories } = categoriesListData;\n\n  // Returns nothing if there are no categories\n  if (!categories) {\n    return null;\n  }\n\n  // Converts the array of tag strings into an array of Tag components\n  const tagList = categories.map((category) => {\n    return <Tag key={category.name} value={category} />;\n  });\n\n  // Returns the list of Tag components inside a div container\n  return <div className={classes.root}>{tagList}</div>;\n};\n\nexport default TagList;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* src/TagList/tagList.css */\n\n.root {\n  display: flex;\n  flex-wrap: wrap;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-taglist-component-dependencies\"\n    }}>{`Add TagList component dependencies`}</h3>\n    <p>{`The TagList component requires third party libraries, such as React, to render the correct HTML.\nSince this package is an extension, you should list these as peer dependencies in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.\nThis safeguards against including more than one copy of the same dependency in the storefront project and final build.`}</p>\n    <p>{`Use the following command to add the TagList component dependencies as peer dependencies:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --peer react @magento/venia-ui\n`}</code></pre>\n    <p>{`This command creates a new `}<inlineCode parentName=\"p\">{`peerDependencies`}</inlineCode>{` entry in your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file that lists these dependencies.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  {\n    \"name\": \"tagList\",\n    \"version\": \"1.0.0\",\n    \"description\": \"A tag list extension for a PWA Studio storefront\",\n    \"main\": \"index.js\",\n-   \"license\": \"MIT\"\n+   \"license\": \"MIT\",\n+   \"peerDependencies\": {\n+     \"@magento/venia-ui\": \"^6.0.1\",\n+     \"react\": \"^17.0.1\"\n+   }\n  }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"export-taglist-in-extension\"\n    }}>{`Export TagList in extension`}</h3>\n    <p>{`Your extension needs to export the TagList component in your project's main entry point to let other developers import it in their code.\nThe default main entry point for Node packages is the `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file, so create this file using the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`touch index.js\n`}</code></pre>\n    <p>{`Edit the file and add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export { default as TagList } from \"./src/TagList\";\n`}</code></pre>\n    <p>{`Now, other developers can import the TagList component in their own projects using the following syntax:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { TagList } from \"tagList\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-data-fetch-hook\"\n    }}>{`Create data fetch hook`}</h2>\n    <p>{`The TagList component requires data the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/peregrine/lib/talons/RootComponents/Product/productDetailFragment.gql.js\"\n      }}>{`ProductDetailsFragment`}</a>{` does not provide, so\nyou need to create a data fetch hook.\nThe data fetch hook is a custom React hook that sends a GraphQL query requesting the product categories for a product.`}</p>\n    <p>{`Run the following command to create this file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/hooks && \\\\\ntouch src/hooks/useProductCategoriesList.js\n`}</code></pre>\n    <p>{`Edit the file and add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* src/hooks/useProductCategoriesList.js */\n\nimport { useMemo } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\n// GraphQL query to fetch a list of categories for a product\nconst GET_PRODUCT_CATEGORIES = gql\\`\n  query getProductCategories($urlKey: String!) {\n    products(filter: { url_key: { eq: $urlKey } }) {\n      items {\n        categories {\n          name\n          url_path\n        }\n      }\n    }\n  }\n\\`;\n\nconst useProductCategoriesList = (props) => {\n  const { urlKey } = props;\n\n  const { error, loading, data } = useQuery(GET_PRODUCT_CATEGORIES, {\n    fetchPolicy: \"cache-and-network\",\n    nextFetchPolicy: \"cache-first\",\n    variables: {\n      urlKey: urlKey,\n    },\n  });\n\n  const categories = useMemo(() => {\n    if (data && data.products.items[0]) {\n      return data.products.items[0].categories;\n    }\n    return null;\n  }, [data]);\n\n  return {\n    error,\n    isLoading: loading,\n    categories,\n  };\n};\n\nexport default useProductCategoriesList;\n`}</code></pre>\n    <p>{`This file requires two new dependencies, `}<inlineCode parentName=\"p\">{`@apollo/client`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`graphql-tag`}</inlineCode>{`.\nRun the following command to add these as peer dependencies to the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --peer @apollo/client graphql-tag\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-wrapper-file\"\n    }}>{`Create wrapper file`}</h2>\n    <p>{`A wrapper file exports an interceptor that wraps a module in another file.\nAn interceptor module has access to the original module and the parameters it receives.\nThis lets the interceptor module run the original code along with its own custom logic that can change the incoming parameters or outgoing return value.`}</p>\n    <p>{`For this extension, create a wrapper file for the `}<inlineCode parentName=\"p\">{`useProductFullDetails()`}</inlineCode>{` hook that calls the data fetch hook you created in a previous step and adds the result to its return value.`}</p>\n    <p>{`First, create this file with the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/targets/ && \\\\\ntouch src/targets/wrapper.js\n`}</code></pre>\n    <p>{`Edit this file and add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import useProductCategoriesList from \"../hooks/useProductCategoriesList\";\n\nexport default (original) => {\n  return function useProductFullDetails(props, ...restArgs) {\n    const { product } = props;\n\n    // Run the data fetch hook\n    const categoriesListData = useProductCategoriesList({\n      urlKey: product.url_key,\n    });\n\n    // Run the original, wrapped function\n    const { productDetails, ...defaultReturnData } = original(\n      props,\n      ...restArgs\n    );\n\n    // Add the new data to the data returned by the original function\n    return {\n      ...defaultReturnData,\n      productDetails: {\n        ...productDetails,\n        categoriesListData: categoriesListData,\n      },\n    };\n  };\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"define-intercept-file\"\n    }}>{`Define intercept file`}</h2>\n    <p>{`The intercept file is where you directly interact with Target objects to apply customizations.\nIn this extension, the intercept file tells the build process to use Webpack loaders for ES Modules and CSS Modules.\nWithout these intructions, the build process will not know how to load the files in this extension.`}</p>\n    <p>{`Create this file using the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`touch src/targets/intercept.js\n`}</code></pre>\n    <p>{`Edit this file and add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = (targets) => {\n  const { Targetables } = require(\"@magento/pwa-buildpack\");\n\n  const targetables = Targetables.using(targets);\n\n  targetables.setSpecialFeatures(\"esModules\", \"cssModules\");\n};\n`}</code></pre>\n    <p>{`This script uses `}<inlineCode parentName=\"p\">{`@magento/pwa-buildpack`}</inlineCode>{`, so you need to add this library as a dependency.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --peer @magento/pwa-buildpack\n`}</code></pre>\n    <p>{`Next, edit your `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file to point to the location of this extension's intercept file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  {\n    \"name\": \"tagList\",\n    \"version\": \"1.0.0\",\n    \"description\": \"A tag list extension for a PWA Studio storefront\",\n    \"main\": \"index.js\",\n    \"license\": \"MIT\",\n    \"peerDependencies\": {\n      \"@apollo/client\": \"^3.3.11\",\n      \"@magento/pwa-buildpack\": \"^8.0.1\",\n      \"@magento/venia-ui\": \"^6.0.1\",\n      \"graphql-tag\": \"^2.11.0\",\n      \"react\": \"^17.0.1\"\n+   },\n+   \"pwa-studio\": {\n+     \"targets\": {\n+       \"intercept\": \"src/targets/intercept\"\n+     }\n    }\n  }\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"install-extension-locally\"\n    }}>{`Install extension locally`}</h2>\n    <p>{`Navigate to your storefront project directory and use the `}<inlineCode parentName=\"p\">{`yarn add file:/path/to/local/folder`}</inlineCode>{` syntax for the `}<inlineCode parentName=\"p\">{`yarn add`}</inlineCode>{` CLI to install your extension locally.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --dev file:../extensions/tagList\n`}</code></pre>\n    <p>{`This adds a new entry under `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` in your storefront project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file that looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`    \"style-loader\": \"~0.23.1\",\n+   \"tagList\": \"file:../extensions/tagList\",\n    \"terser-webpack-plugin\": \"~1.2.3\",\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"intercept-venia-ui-components\"\n    }}>{`Intercept Venia UI components`}</h2>\n    <p>{`All scaffolded projects come with an intercept file called `}<inlineCode parentName=\"p\">{`local-intercept.js`}</inlineCode>{`.\nThis file lets you use `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/tutorials/targets/\"\n      }}>{`Targets and Targetables`}</a>{` to make modifications to the Venia application code without copying over the source file.`}</p>\n    <p>{`Edit this file so it looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* local-intercept.js */\n\n// Import the Targetables manager\nconst { Targetables } = require(\"@magento/pwa-buildpack\");\n\nfunction localIntercept(targets) {\n  // Create a bound Targetable factory\n  const targetables = Targetables.using(targets);\n\n  // Create a React component targetable linked to the productFullDetail.js file\n  const ProductDetails = targetables.reactComponent(\n    \"@magento/venia-ui/lib/components/ProductFullDetail/productFullDetail.js\"\n  );\n\n  // Add an import statement to the productFullDetail.js file and\n  // return the SingleImportStatement object\n  const TagList = ProductDetails.addImport(\"{TagList} from 'tagList'\");\n\n  // Insert the TagList component after the product description and pass in the\n  // new categoriesListData object added to the useProductFullDetails() hook\n  ProductDetails.insertAfterJSX(\n    \"<RichText content={productDetails.description} />\",\n    \\`<\\${TagList} categoriesListData={productDetails.categoriesListData} />\\`\n  );\n\n  // Create an ES Module targetable linked to the useProductFullDetail.js file\n  const useProductFullDetails = targetables.esModule(\n    \"@magento/peregrine/lib/talons/ProductFullDetail/useProductFullDetail.js\"\n  );\n\n  // Wrap the useProductFullDetail hook with your extension's wrapper file\n  useProductFullDetails.wrapWithFile(\n    \"useProductFullDetail\",\n    \"tagList/src/targets/wrapper\"\n  );\n}\n\nmodule.exports = localIntercept;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"congratulations\"\n    }}>{`Congratulations`}</h2>\n    <p>{`You created a tag list extension and installed it in your development server!`}</p>\n    <p>{`Now, when you start your storefront application and navigate to a product page, you will see a list of tags associated with that product.`}</p>\n    <h2 {...{\n      \"id\": \"live-example\"\n    }}>{`Live example`}</h2>\n    <p>{`You can see this extension running live in this `}<a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/magento-devdocs/pwa-studio-code-sandbox/tree/taglist-extension-tutorial/\"\n      }}>{`CodeSandbox instance`}</a>{` or you can check out the source repository in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento-devdocs/pwa-studio-code-sandbox/tree/taglist-extension-tutorial\"\n      }}>{`taglist-extension-tutorial`}</a>{` branch in the `}<strong parentName=\"p\">{`magento-devdocs/pwa-studio-code-sandbox`}</strong>{` GitHub project.`}</p>\n    <iframe src=\"https://codesandbox.io/embed/github/magento-devdocs/pwa-studio-code-sandbox/tree/taglist-extension-tutorial/?fontsize=12&hidenavigation=1&module=%2Fextensions%2FtagList%2Fpackage.json&moduleview=1&theme=dark\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"dev-sandbox\" allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","style","title","allow","sandbox","isMDXComponent"],"sourceRoot":""}