{"version":3,"file":"component---src-pages-tutorials-targets-add-environment-variable-index-md-364c812627482cc7ae49.js","mappings":"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","sources":["webpack://commerce-pwa-studio/./src/pages/tutorials/targets/add-environment-variable/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-new-environment-variable\"\n    }}>{`Add a new environment variable`}</h1>\n    <p>{`Environment variables provide values that may vary across different instances of the same project.\nThe value of this variable can vary between development, staging, and production environments.`}</p>\n    <h2 {...{\n      \"id\": \"background\"\n    }}>{`Background`}</h2>\n    <p>{`In PWA Studio storefront projects, the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file in the project's root directory lists the environment variables and their values.\nFor example, the `}<inlineCode parentName=\"p\">{`MAGENTO_BACKEND_URL`}</inlineCode>{` environment variable tells your storefront project which Adobe Commerce or Magento Open Source instance it uses during runtime.\nThese variables are available to your Node scripts, but for security reasons, PWA Studio limits which variables your frontend code can access.`}</p>\n    <p>{`This tutorial teaches you how to create a package which provides a React component that uses an environment variable.`}</p>\n    <h2 {...{\n      \"id\": \"tasks-overview\"\n    }}>{`Tasks overview`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Initialize the project`}</li>\n      <li parentName=\"ol\">{`Create the PlaceholderImage component`}</li>\n      <li parentName=\"ol\">{`Create and register the intercept file`}</li>\n      <li parentName=\"ol\">{`Define the intercept file`}</li>\n      <li parentName=\"ol\">{`Test on a local instance`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"initialize-the-project\"\n    }}>{`Initialize the project`}</h2>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.npmjs.com/cli/init\"\n      }}><inlineCode parentName=\"a\">{`npm init`}</inlineCode></a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"https://classic.yarnpkg.com/en/docs/cli/init/\"\n      }}><inlineCode parentName=\"a\">{`yarn init`}</inlineCode></a>{` to create a new JavaScript package project for this tutorial.\nSince this is a standalone project, you do not need to create this inside a storefront project.`}</p>\n    <p>{`Edit the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file so it looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"PlaceholderImage\",\n  \"version\": \"1.0.0\",\n  \"license\": \"MIT\",\n  \"peerDependencies\": {\n    \"@magento/pwa-buildpack\": \"^7.0.0\",\n    \"@magento/venia-ui\": \"^5.0.0\",\n    \"react\": \"^16.14.0\"\n  }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-the-placeholderimage-component\"\n    }}>{`Create the PlaceholderImage component`}</h2>\n    <p>{`Create a React component that renders an image from an image placeholder service source provided by an environment variable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/components/PlaceholderImage && touch src/components/placeholderImage.js\n`}</code></pre>\n    <p>{`Inside the `}<inlineCode parentName=\"p\">{`placeholderImage.js`}</inlineCode>{`, add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\n\nconst PlaceholderImage = (props) => {\n  const { width = 300, height = 300 } = props;\n\n  const urlTemplate = process.env.IMAGE_PLACEHOLDER_SERVICE_URL;\n\n  if (!urlTemplate) {\n    console.error(\"Image placeholder service not defined!\");\n    return null;\n  }\n\n  const finalUrl = urlTemplate.replace(\"\\${w}\", width).replace(\"\\${h}\", height);\n\n  return <img src={finalUrl} />;\n};\n\nexport default PlaceholderImage;\n`}</code></pre>\n    <p>{`The PlaceholderImage component uses the value of the `}<inlineCode parentName=\"p\">{`IMAGE_PLACEHOLDER_SERVICE_URL`}</inlineCode>{` environment variable as a template for the final image source url.\nIt replaces instances of `}<inlineCode parentName=\"p\">{`\\${w}`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\\${h}`}</inlineCode>{` in the template with the `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{` prop values.`}</p>\n    <p>{`Most image placeholder services let you specify the image dimensions in the url but in different ways.\nFor example, a 300x400 image request can look like `}<inlineCode parentName=\"p\">{`<url>/300/400`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`<url>/300x400`}</inlineCode>{`.\nThis template approach adds support for these different services by letting you specify what the final URL looks like.`}</p>\n    <h3 {...{\n      \"id\": \"make-the-component-importable\"\n    }}>{`Make the component importable`}</h3>\n    <p>{`To use this component in other projects, you must export it from this package, so\nmake the following modifications to the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  {\n    \"name\": \"PlaceholderImage\",\n    \"version\": \"1.0.0\",\n    \"license\": \"MIT\",\n+   \"main\": \"src/components/PlaceholderImage/placeholderImage.js\",\n    \"peerDependencies\": {\n      \"@magento/pwa-buildpack\": \"^7.0.0\",\n      \"@magento/venia-ui\": \"^5.0.0\",\n      \"react\": \"^16.14.0\"\n    }\n  }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-and-register-the-intercept-file\"\n    }}>{`Create and register the intercept file`}</h2>\n    <p>{`You can create the intercept file anywhere in your project.\nFor this tutorial, create this file under `}<inlineCode parentName=\"p\">{`src/targets`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/targets && touch src/targets/intercept.js\n`}</code></pre>\n    <p>{`Set the value for `}<inlineCode parentName=\"p\">{`pwa-studio.targets.intercept`}</inlineCode>{` in your project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file to tell the build process where to find the intercept file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  {\n    \"name\": \"PlaceholderImage\",\n    \"version\": \"1.0.0\",\n    \"license\": \"MIT\",\n    \"main\": \"src/components/PlaceholderImage/placeholderImage.js\",\n    \"peerDependencies\": {\n      \"@magento/pwa-buildpack\": \"^7.0.0\",\n      \"@magento/venia-ui\": \"^5.0.0\",\n      \"react\": \"^16.14.0\"\n-   }\n+   },\n+   \"pwa-studio\": {\n+     \"targets\": {\n+       \"intercept\": \"src/targets/intercept\"\n+     }\n+   }\n  }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"define-the-intercept-file\"\n    }}>{`Define the intercept file`}</h2>\n    <p>{`The intercept file is where you tap into PWA Studio's extensibility framework and add your modifications.`}</p>\n    <p>{`In your intercept file, add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = (targets) => {\n  const buildpackTargets = targets.of(\"@magento/pwa-buildpack\");\n\n  buildpackTargets.envVarDefinitions.tap((defs) => {\n    defs.sections.push({\n      name: \"PlaceholderImage settings\",\n      variables: [\n        {\n          name: \"IMAGE_PLACEHOLDER_SERVICE_URL\",\n          type: \"str\",\n          desc: \"Service URL for image placeholders\",\n        },\n      ],\n    });\n  });\n\n  buildpackTargets.specialFeatures.tap((featuresByModule) => {\n    featuresByModule[\"PlaceholderImage\"] = {\n      esModules: true,\n    };\n  });\n};\n`}</code></pre>\n    <p>{`When this file runs, it taps into the `}<inlineCode parentName=\"p\">{`envVarDefinitions`}</inlineCode>{` target from the available targets in `}<inlineCode parentName=\"p\">{`@magento/pwa-buildpack`}</inlineCode>{` and passes in an intercept function.\nThe intercept function appends a new definition to the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/environment/variables/\"\n      }}>{`core environment variable definitions`}</a>{`, which allows frontend code access to the `}<inlineCode parentName=\"p\">{`IMAGE_PLACEHOLDER_SERVICE_URL`}</inlineCode>{` environment variable.`}</p>\n    <h2 {...{\n      \"id\": \"test-on-a-local-instance\"\n    }}>{`Test on a local instance`}</h2>\n    <p>{`Install this package in a local storefront project to use the PlaceholderImage component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --dev link:/path/to/your/project\n`}</code></pre>\n    <p>{`This adds a `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` entry to your storefront project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` that looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`    \"@storybook/react\": \"~5.2.6\",\n+   \"PlaceholderImage\": \"link:/path/to/your/project\",\n    \"apollo-cache-persist\": \"~0.1.1\",\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"create-environment-variable-entry\"\n    }}>{`Create environment variable entry`}</h3>\n    <p>{`In your project's `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file, create an entry for `}<inlineCode parentName=\"p\">{`IMAGE_PLACEHOLDER_SERVICE_URL`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-text\"\n      }}>{`IMAGE_PLACEHOLDER_SERVICE_URL=http://www.loremflickr.com/\\${w}/\\${h}\n`}</code></pre>\n    <p>{`The PlaceholderImage component uses this value to compute the source when it renders the image.`}</p>\n    <h3 {...{\n      \"id\": \"create-a-demo-page\"\n    }}>{`Create a demo page`}</h3>\n    <p>{`Create a demo page component to render the ImagePlaceholder component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/components/PlaceholderImageDemo && touch src/component/PlaceholderImageDemo/placeholderImageDemo.js\n`}</code></pre>\n    <p>{`Inside `}<inlineCode parentName=\"p\">{`placeholderImageDemo.js`}</inlineCode>{`, add the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\nimport PlaceholderImage from \"PlaceholderImage\";\n\nconst PlaceholderImageDemo = () => {\n  return <PlaceholderImage width={200} height={300} />;\n};\n\nexport default PlaceholderImageDemo;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-a-static-route\"\n    }}>{`Add a static route`}</h3>\n    <p>{`If you used the project scaffolding tool in PWA Studio 8.0.0 or above, your project will have a `}<inlineCode parentName=\"p\">{`local-intercept.js`}</inlineCode>{` file.\nIf you do not have this file, use the same earlier steps to `}<a parentName=\"p\" {...{\n        \"href\": \"#create-and-register-the-intercept-file\"\n      }}>{`create and register the intercept file`}</a>{`.`}</p>\n    <p>{`Inside your storefront's intercept file, add the following content to add a new static route for your demo page:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function localIntercept(targets) {\n  targets.of(\"@magento/venia-ui\").routes.tap((routes) => {\n    routes.push({\n      name: \"Placeholder Image demo page\",\n      pattern: \"/placeholder-image-demo\",\n      exact: true,\n      path: require.resolve(\n        \"./src/components/PlaceholderImageDemo/placeholderImageDemo.js\"\n      ),\n    });\n    return routes;\n  });\n}\n\nmodule.exports = localIntercept;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"check-out-the-page\"\n    }}>{`Check out the page`}</h3>\n    <p>{`Now, when you start your project, you can navigate to `}<inlineCode parentName=\"p\">{`/placeholder-image-demo`}</inlineCode>{` and see the PlaceholderImage component in action.`}</p>\n    <iframe src=\"https://codesandbox.io/embed/environment-variable-tutorial-9z0rb?fontsize=11&hidenavigation=1&initialpath=%2Fplaceholder-image-demo&module=%2Fsrc%2Fcomponents%2FPlaceholderImageDemo%2FplaceholderImageDemo.js&theme=dark\" style={{\n      \"width\": \"100%\",\n      \"height\": \"500px\",\n      \"border\": \"0\",\n      \"borderRadius\": \"4px\",\n      \"overflow\": \"hidden\"\n    }} title=\"environment-variable-tutorial\" allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","src","style","title","allow","sandbox","isMDXComponent"],"sourceRoot":""}