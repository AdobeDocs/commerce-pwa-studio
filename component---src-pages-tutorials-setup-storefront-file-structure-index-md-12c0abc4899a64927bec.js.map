{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/tutorials/setup-storefront/file-structure/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-tutorials-setup-storefront-file-structure-index-md-12c0abc4899a64927bec.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"explore-the-files\"\n    }}>{`Explore the files`}</h1>\n    <p>{`Learn about the files found inside a new storefront project.`}</p>\n    <h2 {...{\n      \"id\": \"source-directory\"\n    }}>{`Source directory`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory holds your storefront project's source code.\nThis is where you add your own custom, client-side code for your storefront.`}</p>\n    <p>{`During the build process, Webpack scans this folder and creates bundles from these files.\nThese bundles are small chunks of your storefront that the server provides to the browser as needed.`}</p>\n    <p>{`After scaffolding a new project, the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory looks like the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tree\"\n      }}>{`src\n├── .storybook\n├── ServiceWorker\n├── drivers.js\n├── index.js\n├── registerSW.js\n└── store.js\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"storybook\"\n    }}><inlineCode parentName=\"h3\">{`.storybook`}</inlineCode></h3>\n    <p>{`This directory contains configurations for `}<a parentName=\"p\" {...{\n        \"href\": \"https://storybook.js.org/docs/react/workflows/testing-with-storybook\"\n      }}>{`Storybook`}</a>{` testing.\nYou can delete this directory if you do not need it.`}</p>\n    <h3 {...{\n      \"id\": \"serviceworker\"\n    }}><inlineCode parentName=\"h3\">{`ServiceWorker`}</inlineCode></h3>\n    <p>{`The ServiceWorker directory contains all the logic for providing `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/web/fundamentals/primers/service-workers\"\n      }}>{`service worker features`}</a>{`.\nExamples of service workers features include push notifications, background sync, and even offline mode for your storefront.`}</p>\n    <p>{`The service worker also gives you the ability to intercept and handle network requests.\nThis gives you better control over your site's client-side caching logic.`}</p>\n    <h3 {...{\n      \"id\": \"driversjs\"\n    }}><inlineCode parentName=\"h3\">{`drivers.js`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`drivers.js`}</inlineCode>{` file is a centralized module that provides non-PWA-Studio dependencies, such as GraphQL clients, React-router components, Redux components, etc.\nCentralizing these modules into a virtual dependency makes it easy to switch out or override these components`}</p>\n    <p>{`You have access to these dependencies through the virtual `}<inlineCode parentName=\"p\">{`@magento/venia-drivers`}</inlineCode>{` dependency:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Link, resourceUrl } from \"@magento/venia-drivers\";\n`}</code></pre>\n    <p>{`Edit the entry in the `}<inlineCode parentName=\"p\">{`browser`}</inlineCode>{` section of the `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file if you want to change the name.`}</p>\n    <p>{`For more information about Venia's drivers and adapters pattern, see: `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/packages/venia/drivers-adapters/\"\n      }}>{`Modular components`}</a></p>\n    <h3 {...{\n      \"id\": \"indexjs\"\n    }}><inlineCode parentName=\"h3\">{`index.js`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file is the entry point for your application.\nIt imports the Venia application as a single component and renders it in the DOM.\nIt also wraps it up inside components that provide the drivers and application context.`}</p>\n    <h3 {...{\n      \"id\": \"registerswjs\"\n    }}><inlineCode parentName=\"h3\">{`registerSW.js`}</inlineCode></h3>\n    <p>{`This file registers the service worker when users visit the storefront.\nThe contents of this file is standard, boilerplate code and does not need modifications.`}</p>\n    <h3 {...{\n      \"id\": \"storejs\"\n    }}><inlineCode parentName=\"h3\">{`store.js`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`store.js`}</inlineCode>{` file connects the Peregrine global store with your project's UI components.\nHere, you can add your custom reducers and enhancers to Peregrine's global store.`}</p>\n    <p>{`For more information about state management, see: `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/general-concepts/state-management/\"\n      }}>{`State management`}</a></p>\n    <h2 {...{\n      \"id\": \"non-source-files\"\n    }}>{`Non-source files`}</h2>\n    <p>{`These are important files outside the source directory.`}</p>\n    <h3 {...{\n      \"id\": \"local-interceptjs\"\n    }}><inlineCode parentName=\"h3\">{`local-intercept.js`}</inlineCode></h3>\n    <p>{`This is the intercept file for your storefront project.\nIt lets you use the extensibility framework to make changes to the Venia application and its dependencies using Targets and Targetables.`}</p>\n    <h3 {...{\n      \"id\": \"webpackconfigjs\"\n    }}><inlineCode parentName=\"h3\">{`webpack.config.js`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode>{` is a Webpack configuration file.\nIt uses `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/webpack/configure/\"\n      }}><inlineCode parentName=\"a\">{`configureWebpack`}</inlineCode></a>{` from PWA Studio's buildpack to create a configuration object for Webpack.`}</p>\n    <h3 {...{\n      \"id\": \"upwardyml\"\n    }}><inlineCode parentName=\"h3\">{`upward.yml`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file is an `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/packages/upward/\"\n      }}>{`UPWARD`}</a>{` configuration file.\nIt provides instructions for how an UPWARD server implementation should respond to a request.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`headers`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` values defined in the default `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file uses values from the `}<inlineCode parentName=\"p\">{`veniaResponse`}</inlineCode>{` object.\nThis object is defined in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/upward.yml\"\n      }}>{`venia-ui package's `}<inlineCode parentName=\"a\">{`upward.yml`}</inlineCode>{` file`}</a>{`.`}</p>\n    <p>{`You can edit this file if you want to change how your project's UPWARD server responds to requests,\nbut the preferred method is to use Targetables to make these changes.`}</p>\n    <h3 {...{\n      \"id\": \"templatehtml\"\n    }}><inlineCode parentName=\"h3\">{`template.html`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`template.html`}</inlineCode>{` file contains the template for the server-side rendered HTML code for your storefront's application shell.`}</p>\n    <p>{`During the build process, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/plugins/html-webpack-plugin/\"\n      }}>{`HtmlWebpackPlugin`}</a>{` injects this file with dynamic data, such as project variables and imports for Webpack-generated Javascript bundles.\nThe script saves this new file as `}<inlineCode parentName=\"p\">{`dist/index.html`}</inlineCode>{`.\nWhen a browser creates the initial request for your storefront application, the default `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` configuration tells the UPWARD server to respond with this index file.`}</p>\n    <p>{`As the JavaScript bundles load in the browser, the React components hydrate the different visual elements on the page with separate network requests.`}</p>\n    <h3 {...{\n      \"id\": \"serverjs\"\n    }}><inlineCode parentName=\"h3\">{`server.js`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`server.js`}</inlineCode>{` file is the script that starts the production or development server.\nThe script loads the `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` variable from the environment or your project's `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to determine which server type to start.`}</p>\n    <p>{`Use the following values for `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`production`}</inlineCode>{` - start a production server`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`test`}</inlineCode>{` - start a staging server that uses staging server environment configurations`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`development`}</inlineCode>{` - start a development server that uses the development server environment configurations`}</li>\n    </ul>\n    <p>{`For more information on loading environment variables, see: `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/cli/load-environment-file/\"\n      }}>{`Load environment file`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}