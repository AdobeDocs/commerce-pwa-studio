{"version":3,"sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/transform-requests/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uSASaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,sBADR,uBAGA,mCAAoB,cAAGC,WAAW,IAC9B,KAAQ,gDACP,uBAAYA,WAAW,KAAvB,qBAFL,mJAG4C,uBAAYA,WAAW,KAAvB,oBAH5C,yIAIyF,uBAAYA,WAAW,KAAvB,gBAJzF,gCAYA,SAAC,IAAD,CAAMD,QAAQ,UAKlBH,EAAWK,gBAAiB","file":"component---src-pages-api-buildpack-transform-requests-index-md-18e1dc948360df5b9dac.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/ModuleTransformConfig.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"transform-requests\"\n    }}>{`Transform Requests`}</h1>\n    <p>{`The built-in `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/targets/\"\n      }}><inlineCode parentName=\"a\">{`transformModules`}</inlineCode></a>{` target is a powerful way to customize the build process for a particular file or set of files.\nMany common Targets are implemented using the `}<inlineCode parentName=\"p\">{`transformModules`}</inlineCode>{` target and a custom transformer module.\nInterceptors of this target receive a single function as their first argument. This is the `}<inlineCode parentName=\"p\">{`addTransform`}</inlineCode>{` function documented below.`}</p>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Docs mdxType=\"Docs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}