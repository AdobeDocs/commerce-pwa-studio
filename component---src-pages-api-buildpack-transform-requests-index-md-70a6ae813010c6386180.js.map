{"version":3,"file":"component---src-pages-api-buildpack-transform-requests-index-md-70a6ae813010c6386180.js","mappings":"4SAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,sBACH,uBACLA,EAAAA,EAAAA,KAAA,SAAK,iBAAeA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC9B,KAAQ,gDACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAM,qBAAqC,mJAC3BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAM,oBAAiC,yIACjBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAM,gBAA6B,gCAMnJH,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAACF,QAAQ,SAGlB,CAEAR,EAAWW,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/transform-requests/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/ModuleTransformConfig.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"transform-requests\"\n    }}>{`Transform Requests`}</h1>\n    <p>{`The built-in `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/targets/\"\n      }}><inlineCode parentName=\"a\">{`transformModules`}</inlineCode></a>{` target is a powerful way to customize the build process for a particular file or set of files.\nMany common Targets are implemented using the `}<inlineCode parentName=\"p\">{`transformModules`}</inlineCode>{` target and a custom transformer module.\nInterceptors of this target receive a single function as their first argument. This is the `}<inlineCode parentName=\"p\">{`addTransform`}</inlineCode>{` function documented below.`}</p>\n    {/*\n     The reference doc content is generated automatically from the source code.\n     To update this section, update the doc blocks in the source code\n     */}\n\n    <Docs mdxType=\"Docs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","Docs","isMDXComponent"],"sourceRoot":""}