{"version":3,"file":"component---src-pages-api-buildpack-targetables-targetable-module-index-md-e8bf7dc83e341da5f401.js","mappings":"uSASaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,oBADR,qBAUA,SAAC,IAAD,CAAMA,QAAQ,UACd,eACE,GAAM,YADR,aAGA,kDAAmC,uBAAYC,WAAW,KAAvB,oBAAnC,YACA,eACE,GAAM,sBADR,uBAGA,0BAAW,uBAAYA,WAAW,KAAvB,oBAAX,uGACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,kgBAmBL,sFAAuE,cAAGA,WAAW,IACjF,KAAQ,qGACP,uBAAYA,WAAW,KAAvB,YAFL,2BAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,qjBAqBL,eACE,GAAM,mBADR,oBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0DADQ,yBAQ1BJ,EAAWK,gBAAiB","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/targetables/TargetableModule/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/targetables/TargetableModule.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"targetablemodule\"\n    }}>{`TargetableModule`}</h1>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Docs mdxType=\"Docs\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Code examples for using the `}<inlineCode parentName=\"p\">{`TargetableModule`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"insert-source-code\"\n    }}>{`Insert source code`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`TargetableModule`}</inlineCode>{` class contains functions that let you insert custom code into different areas in the source code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { Targetables } = require(\"@magento/pwa-buildpack\");\n\nmodule.exports = (targets) => {\n  const targetableFactory = Targetables.using(targets);\n\n  // Create a TargetableModule instance that points to the main.js source\n  const MainComponent = targetables.module(\n    \"@magento/venia-ui/lib/components/Main/main.js\"\n  );\n\n  // Insert a console log message in the source\n  MainComponent.insertAfterSource(\n    \"const Main = props => {\\\\n\",\n    '\\\\tconsole.log(\"Hello World\");\\\\n'\n  );\n};\n`}</code></pre>\n    <p>{`The following example makes the following code modifications to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/Main/main.js\"\n      }}><inlineCode parentName=\"a\">{`main.js`}</inlineCode></a>{` for the final bundle:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  const Main = props => {\n+     console.log(\"Hello World\");\n      const { children, isMasked } = props;\n      const classes = mergeClasses(defaultClasses, props.classes);\n\n      const rootClass = isMasked ? classes.root_masked : classes.root;\n      const pageClass = isMasked ? classes.page_masked : classes.page;\n\n      useScrollLock(isMasked);\n\n      return (\n          <main className={rootClass}>\n              <Header />\n              <div className={pageClass}>{children}</div>\n              <Footer />\n          </main>\n      );\n  };\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"related-content\"\n    }}>{`Related content`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/commerce-pwa-studio/api/buildpack/transform-requests/\"\n        }}>{`Transform Requests`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}