{"version":3,"file":"component---src-pages-api-peregrine-targets-index-md-b74f33017ce87ed42c5c.js","mappings":"uSASaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,qBADR,sBAGA,mHACA,eACE,GAAM,mCADR,oCAGA,8EAA+D,uBAAYC,WAAW,KAAvB,oCAA/D,mCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,0IAOL,8BAAe,cAAGA,WAAW,IACzB,KAAQ,qEADG,iCAAf,6GAGA,eACE,GAAM,mBADR,oBAGA,2HACA,0BAAW,uBAAYA,WAAW,KAAvB,0BAAX,6BAA0G,cAAGA,WAAW,IACpH,KAAQ,4EAD8F,uBAA1G,kGAGyD,uBAAYA,WAAW,KAAvB,UAHzD,6HAIA,8BAAe,cAAGA,WAAW,IACzB,KAAQ,gEADG,wBAAf,6EAGA,eACE,GAAM,gBADR,iBAGA,0DACA,oBACE,eAAIA,WAAW,MAAf,sEACA,eAAIA,WAAW,MAAf,0CAA8D,uBAAYA,WAAW,MAAvB,YAC9D,eAAIA,WAAW,MAAf,yBACA,eAAIA,WAAW,MAAf,wKAEF,2DAA4C,eAAIA,WAAW,KAAf,QAA5C,wBAAoG,cAAGA,WAAW,IAC9G,KAAQ,+CADwF,cAEjF,uBAAYA,WAAW,KAAvB,mBAFiF,WAApG,8BAE2H,uBAAYA,WAAW,KAAvB,kBAF3H,MAUA,SAAC,IAAD,CAASD,QAAQ,aAKrBH,EAAWK,gBAAiB","sources":["webpack://commerce-pwa-studio/./src/pages/api/peregrine/targets/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Targets from '/src/data/auto-generated/peregrine/lib/targets/peregrine-declare.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"peregrine-targets\"\n    }}>{`Peregrine targets`}</h1>\n    <p>{`Peregrine targets provide access to the custom React hooks and talons used in UI components.`}</p>\n    <h2 {...{\n      \"id\": \"accessing-the-peregrine-targets\"\n    }}>{`Accessing the Peregrine targets`}</h2>\n    <p>{`Access these targets in your intercept files by calling `}<inlineCode parentName=\"p\">{`targets.of('@magento/peregrine')`}</inlineCode>{` on the TargetProvider object.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* my-custom-interceptors.js */\nmodule.exports = (targets) => {\n  const peregrineTargets = targets.of(\"@magento/peregrine\");\n};\n`}</code></pre>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento-research/pwa-studio-target-experiments\"\n      }}>{`PWA Studio Target Experiments`}</a>{` project repository for documented examples of extensions that use PWA Studio's extensibility framework.`}</p>\n    <h2 {...{\n      \"id\": \"wrapper-modules\"\n    }}>{`Wrapper modules`}</h2>\n    <p>{`You can extend the functionality of Peregrine's custom hooks and talons by applying wrapper modules.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`talon.wrapWith(module)`}</inlineCode>{` method is simlar to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/components/plugins/\"\n      }}>{`interceptor pattern`}</a>{` used in Magento backend plugins.\nPeregrine will dynamically inject the code from the passed `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{` \"around\" the implementation of a talon, by passing the talon function through the wrapper function before exporting it.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/tutorials/targets/modify-talon-results/\"\n      }}>{`Modify talon results`}</a>{` tutorial for step-by-step instructions on working with wrapper modules.`}</p>\n    <h3 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h3>\n    <p>{`Wrapper modules for Peregrine must:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`be implemented in a separate file from the build-time Target code`}</li>\n      <li parentName=\"ul\">{`be accessible in frontend code via an `}<inlineCode parentName=\"li\">{`import`}</inlineCode></li>\n      <li parentName=\"ul\">{`be a valid ES Module`}</li>\n      <li parentName=\"ul\">{`export one default function that implements the same interface, i.e. it receives the original talon function as its parameter and must return a new talon function`}</li>\n    </ul>\n    <p>{`Extensions which use wrapper modules `}<em parentName=\"p\">{`must`}</em>{` also intercept the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/targets/\"\n      }}>{`Buildpack `}<inlineCode parentName=\"a\">{`specialFeatures`}</inlineCode>{` target`}</a>{` and set the feature flag `}<inlineCode parentName=\"p\">{`esModule: true`}</inlineCode>{`.`}</p>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Targets mdxType=\"Targets\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}