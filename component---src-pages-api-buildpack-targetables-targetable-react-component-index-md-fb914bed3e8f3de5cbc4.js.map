{"version":3,"file":"component---src-pages-api-buildpack-targetables-targetable-react-component-index-md-fb914bed3e8f3de5cbc4.js","mappings":"qSAOaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4BAA0B,6BAOlC,SAAC,IAAI,CAACA,QAAQ,UACd,eACE,GAAM,YAAU,aAElB,4CAA6B,uBAAYC,WAAW,KAAG,4BAA0C,YACjG,eACE,GAAM,gCAA8B,kCAEtC,0BAAW,uBAAYA,WAAW,KAAG,4BAA0C,wNAEhD,cAAGA,WAAW,IACzC,KAAQ,qGACP,uBAAYA,WAAW,KAAG,YAA6B,wDAC5D,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,ghDA+ClC,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/targetables/TargetableReactComponent/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/targetables/TargetableReactComponent.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"targetablereactcomponent\"\n    }}>{`TargetableReactComponent`}</h1>\n    {/*\n     The reference doc content is generated automatically from the source code.\n     To update this section, update the doc blocks in the source code\n     */}\n\n    <Docs mdxType=\"Docs\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Code examples for the `}<inlineCode parentName=\"p\">{`TargetableReactComponent`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"modify-venias-main-component\"\n    }}>{`Modify Venia's Main component`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`TargetableReactComponent`}</inlineCode>{` class provides functions that change the JSX structure a React component returns.\nThe following example uses some of these functions to make changes to Venia's Main component.\nIt uses JSX strings found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/Main/main.js\"\n      }}><inlineCode parentName=\"a\">{`main.js`}</inlineCode></a>{` file to specify where these changes should happen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { Targetables } = require(\"@magento/pwa-buildpack\");\n\nmodule.exports = (targets) => {\n  const targetables = Targetables.using(targets);\n\n  // Create a TargetableReactComponent linked to the \\`main.js\\` file\n  const MainComponent = targetables.reactComponent(\n    \"@magento/venia-ui/lib/components/Main/main.js\"\n  );\n\n  // Add an import statement for Venia's Button component\n  const Button = MainComponent.addImport(\n    \"Button from '@magento/venia-ui/lib/components/Button'\"\n  );\n\n  // Use method chaining to call chainable functions one after the other\n  MainComponent.appendJSX(\n    \"div className={pageClass}\",\n    \"<span>appendJSX succeeded!</span>\"\n  )\n    .addJSXClassName(\"div className={pageClass}\", \"newClass\")\n    .addJSXClassName(\"Header\", '\"anotherClass\"')\n    .insertAfterJSX(\n      \"<Footer/>\",\n      \\`<\\${Button} type=\"button\" priority=\"high\">insertAfterJSX succeeded!</\\${Button}>\\`\n    )\n    .insertBeforeJSX(\"<Header />\", \"<span>insertBeforeJSX succeeded!</span>\")\n    .replaceJSX(\"span id={\\`\\${dot.path}\\`}\", \"<span>replaceJSX worked</span>\")\n    .prependJSX(\"div\", \"<>prependJSX succeeded!</>\")\n    .removeJSX('span className=\"busted\"')\n    .setJSXProps(\"Footer\", {\n      \"aria-role\": '\"footer\"',\n      \"data-set-jsx-props-succeeded\": true,\n    })\n    .surroundJSX(\n      \"Header\",\n      \\`div style={{ filter: \"blur(1px)\", outline: \"2px dashed red\" }}\\`\n    )\n    .insertBeforeJSX(\n      'Footer aria-role=\"footer\"',\n      \"<span>Cumulative select worked</span>\"\n    );\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}