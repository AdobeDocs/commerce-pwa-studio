{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/tutorials/targets/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mSAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,kSAEA,eACE,GAAM,kBADR,mBAGA,uKAC+C,uBAAYC,WAAW,KAAvB,kBAD/C,gBAEA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,wUAaL,eACE,GAAM,oCADR,qCAGA,wHAAyG,uBAAYA,WAAW,KAAvB,gBAAzG,WACA,yFAA0E,uBAAYA,WAAW,KAAvB,gCAA1E,kDACyC,uBAAYA,WAAW,KAAvB,4BADzC,uCAEA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,+FAQL,eACE,GAAM,0BADR,2BAGA,iFACE,uBAAYA,WAAW,KAAvB,0BADF,sBAC0F,uBAAYA,WAAW,KAAvB,YAD1F,uFAEA,0BAAW,uBAAYA,WAAW,KAAvB,YAAX,yCAAwG,mBAAQA,WAAW,KAAnB,6BAAxG,yDACmC,uBAAYA,WAAW,KAAvB,gBADnC,SACoG,uBAAYA,WAAW,KAAvB,mBADpG,oBACmL,uBAAYA,WAAW,KAAvB,gBADnL,2KAGA,eACE,GAAM,sBADR,uBAGA,gOAMJJ,EAAWK,gBAAiB","file":"component---src-pages-tutorials-targets-index-md-d3f57ca4a8d61c53ce9e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Target interception is a feature provided by PWA Studio's extensibility framework.\nIt gives you the ability define an intercept file that can change feature behaviors, component logic, and even component source code without modifying a local copy of PWA Studio code.`}</p>\n    <h2 {...{\n      \"id\": \"intercept-file\"\n    }}>{`Intercept file`}</h2>\n    <p>{`The intercept file is where you directly interact with Target objects to apply customizations.\nIt must export a default function that accepts a `}<inlineCode parentName=\"p\">{`TargetProvider`}</inlineCode>{` parameter.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = targets => {\n    // Set buildpack features\n  const builtins = targets.of(\"@magento/pwa-buildpack\");\n  builtins.specialFeatures.tap((featuresByModule) => {\n    featuresByModule[\"my-extension\"] = {\n      // Tells buildpack that this extension uses ES Modules\n      esModules: true,\n    };\n  });\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"intercept-file-name-and-location\"\n    }}>{`Intercept file name and location`}</h3>\n    <p>{`The file name and location of your intercept file is a custom value you specify in your project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.`}</p>\n    <p>{`To register the location of your intercept file, set the value for `}<inlineCode parentName=\"p\">{`pwa-studio.targets.intercept`}</inlineCode>{`.\nFor example, the following entry registers `}<inlineCode parentName=\"p\">{`src/targets/intercept.js`}</inlineCode>{` as this project's intercept file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"pwa-studio\": {\n    \"targets\": {\n      \"intercept\": \"src/targets/intercept\"\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"how-interception-works\"\n    }}>{`How interception works`}</h2>\n    <p>{`Target interception happens during the build process.\nThe `}<inlineCode parentName=\"p\">{`@magento/pwa-buildpack`}</inlineCode>{` module creates a `}<inlineCode parentName=\"p\">{`BuildBus`}</inlineCode>{` process to execute intercept files in the storefront project or its dependencies.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`BuildBus`}</inlineCode>{` process executes intercept files in `}<strong parentName=\"p\">{`named direct dependencies`}</strong>{` in a project.\nThis means that modules listed under `}<inlineCode parentName=\"p\">{`dependencies`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`devDependencies`}</inlineCode>{` in a project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file have the ability to intercept Targets in the project.\nThe process does not execute intercept files in dependencies beyond those modules in the dependency tree.`}</p>\n    <h3 {...{\n      \"id\": \"interception-order\"\n    }}>{`Interception order`}</h3>\n    <p>{`The interception process executes files in dependency order.\nThis means that if your module declares another module with Targets as a peer dependency, the other module's intercept file executes first.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}