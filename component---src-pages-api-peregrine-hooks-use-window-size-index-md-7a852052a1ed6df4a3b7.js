"use strict";(self.webpackChunkcommerce_pwa_studio=self.webpackChunkcommerce_pwa_studio||[]).push([[1160],{16487:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return a},default:function(){return c}});var t=o(87462),i=o(45987),d=(o(15007),o(64983)),r=o(91515),p=o(65505);const s=["components"],a={},m={_frontmatter:a},u=r.Z;function c(e){let{components:n}=e,o=(0,i.Z)(e,s);return(0,d.mdx)(u,(0,t.Z)({},m,o,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"usewindowsize"},"useWindowSize()"),(0,d.mdx)(p.Z,{mdxType:"Component"}),(0,d.mdx)("h2",{id:"examples"},"Examples"),(0,d.mdx)("p",null,"It is recommended to only create/use the WindowSizeContextProvider a single time at the top level of your app:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},"return (\n  <WindowSizeContextProvider>\n    <App />\n  </WindowSizeContextProvider>\n);\n")),(0,d.mdx)("p",null,"Inside a component in your application, use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"useWindowSize()")," function to get the window size value that updates when the window size changes."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'import { useWindowSize } from "@magento/peregrine";\n\nfunction MyComponent(props) {\n  const windowSize = useWindowSize();\n\n  return (\n    <span>\n      Inner window size: {windowSize.innerWidth} x {windowSize.innerHeight}\n    </span>\n  );\n}\n')))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-peregrine-hooks-use-window-size-index-md-7a852052a1ed6df4a3b7.js.map