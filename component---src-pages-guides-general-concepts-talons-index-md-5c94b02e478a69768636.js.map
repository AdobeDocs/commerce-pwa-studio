{"version":3,"file":"component---src-pages-guides-general-concepts-talons-index-md-5c94b02e478a69768636.js","mappings":"iSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,UAAQ,WAEhBA,EAAAA,EAAAA,KAAA,sTAGAA,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,+DAAyDA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,2EACzFH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACzB,KAAQ,8GAA4G,aAClG,wBAAwBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACxD,KAAQ,8GAA4G,kBAC7F,8GACzBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,kBAAgC,+CAA+CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,uDAC/JH,EAAAA,EAAAA,KAAA,MACE,GAAM,uBAAqB,wBAE7BA,EAAAA,EAAAA,KAAA,8FACAA,EAAAA,EAAAA,KAAA,uBAAiBA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,cAAcH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,SAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAiC,kEAC7LH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,UAAoB,oSAGlDH,EAAAA,EAAAA,KAAA,4DAAsDA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,eAA6B,mCAAmCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,gBAClMH,EAAAA,EAAAA,KAAA,MACE,GAAM,gBAAc,iBAEtBA,EAAAA,EAAAA,KAAA,mOAEAA,EAAAA,EAAAA,KAAA,gSAEAA,EAAAA,EAAAA,KAAA,MACE,GAAM,mCAAiC,oCAEzCA,EAAAA,EAAAA,KAAA,6MAEAA,EAAAA,EAAAA,KAAA,2JAAqJA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,WAAyB,QAAQH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,WAAyB,gBACnQH,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,YAEjBA,EAAAA,EAAAA,KAAA,2DAAqDA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC/D,KAAQ,gHAA8G,cACnG,mBACvBH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,gBAAc,yhBAgCnC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/guides/general-concepts/talons/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"talons\"\n    }}>{`Talons`}</h1>\n    <p>{`Peregrine Talons are the logic component counterparts for Venia UI components.\nA Talon is a PWA Studio term for a custom React hook that provides data or performs side effects for a specific UI component.\nSince they are closely coupled to a specific UI component, these hooks are not re-usable.`}</p>\n    <h2 {...{\n      \"id\": \"identifying-talons\"\n    }}>{`Identifying Talons`}</h2>\n    <p>{`Talons are custom React hooks, so they start with `}<inlineCode parentName=\"p\">{`use`}</inlineCode>{` followed by the name of its companion UI component.\nFor example, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/SearchBar/searchBar.js\"\n      }}>{`SearchBar`}</a>{` component uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/peregrine/lib/talons/SearchBar/useSearchBar.js\"\n      }}>{`useSearchBar()`}</a>{` talon to get initial values and functions it needs to handle changes in focus or search term value.\nThe `}<inlineCode parentName=\"p\">{`useSearchBar()`}</inlineCode>{` talon also keeps track of the component's `}<inlineCode parentName=\"p\">{`expanded`}</inlineCode>{` state, which determines how the search bar looks.`}</p>\n    <h2 {...{\n      \"id\": \"talons-versus-hooks\"\n    }}>{`Talons versus hooks`}</h2>\n    <p>{`Talons are a PWA Studio concept that represent a specialized type of React hook.`}</p>\n    <p>{`Peregrine `}<strong parentName=\"p\">{`hooks`}</strong>{`, such as `}<inlineCode parentName=\"p\">{`useDropdown()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`useWindowSize()`}</inlineCode>{`, are designed to be re-usable pieces of code, but\nPeregrine `}<strong parentName=\"p\">{`talons`}</strong>{` are designed to fulfill the logic needs of individual Venia UI components.\nThis means that each talon corresponds to a single Venia component and is not useful outside the component.\nIf a talon needs to use functionality identical to another talon, it is provided by a Peregrine hook.`}</p>\n    <p>{`For example, the functionality provided by the `}<inlineCode parentName=\"p\">{`useHeader()`}</inlineCode>{` talon is only relevant to the `}<inlineCode parentName=\"p\">{`Header`}</inlineCode>{` component.`}</p>\n    <h2 {...{\n      \"id\": \"using-talons\"\n    }}>{`Using talons`}</h2>\n    <p>{`Talons are not re-usable hooks, but they make it easier to work with UI components by providing standard functionality.\nThis lets developers focus on developing the presentation DOM and CSS pieces of a component.`}</p>\n    <p>{`Venia UI components use talons by default, so developers can use Venia UI components as is without worrying about talons.\nIf developers want to change how a Venia UI component looks, they can import its associated talon into a new or modified UI component of the same type.`}</p>\n    <h3 {...{\n      \"id\": \"talon-props-and-returned-object\"\n    }}>{`Talon props and returned object`}</h3>\n    <p>{`Talons use many of the same props as its Venia UI component counterpart.\nThese props are passed into the talon as a single object and are used to generate new values or perform side effects.`}</p>\n    <p>{`The return value after calling a talon is an API object that UI components can destructure for values to display or assign to events, such as `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`onHover`}</inlineCode>{` functions.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`The following code snippet comes from Venia's `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/lib/components/Pagination/pagination.js\"\n      }}>{`Pagination`}</a>{` UI component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`\n...\n\nimport { usePagination } from '@magento/peregrine/lib/talons/Pagination/usePagination';\n\n...\n\nconst Pagination = props => {\n    const { currentPage, setPage, totalPages } = props.pageControl;\n\n    const talonProps = usePagination({\n        currentPage,\n        setPage,\n        totalPages\n    });\n\n    const {\n        handleLeftSkip,\n        handleRightSkip,\n        handleNavBack,\n        handleNavForward,\n        isActiveLeft,\n        isActiveRight,\n        tiles\n    } = talonProps;\n\n    ...\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}