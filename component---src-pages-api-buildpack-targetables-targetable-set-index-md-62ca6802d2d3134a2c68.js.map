{"version":3,"file":"component---src-pages-api-buildpack-targetables-targetable-set-index-md-62ca6802d2d3134a2c68.js","mappings":"uSASaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iBADR,kBAUA,SAAC,IAAD,CAAMA,QAAQ,UACd,eACE,GAAM,YADR,aAGA,kDAAmC,uBAAYC,WAAW,KAAvB,iBAAnC,YACA,eACE,GAAM,oBADR,qBAGA,qEAAsD,uBAAYA,WAAW,KAAvB,0BAAtD,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,2JAKL,eACE,GAAM,2BADR,4BAGA,8BAAe,uBAAYA,WAAW,KAAvB,kBAAf,4DAAqI,uBAAYA,WAAW,KAAvB,iBAArI,4BAA0N,uBAAYA,WAAW,KAAvB,kBAA1N,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,qPASL,eACE,GAAM,8BADR,+BAGA,kCAAmB,uBAAYA,WAAW,KAAvB,iBAAnB,mEAA+I,uBAAYA,WAAW,KAAvB,cAA/I,kDACwC,uBAAYA,WAAW,KAAvB,6CADxC,oCACiK,uBAAYA,WAAW,KAAvB,2BADjK,OAEA,mBAAG,mBAAQA,WAAW,KAAnB,SAAH,4FAEA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,yQAWL,eACE,GAAM,wBADR,yBAGA,gOACmC,uBAAYA,WAAW,KAAvB,mBADnC,aAEA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,6LAUL,0CAA2B,uBAAYA,WAAW,KAAvB,iBAA3B,4DAAgJ,uBAAYA,WAAW,KAAvB,wBAAhJ,eACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,gFAIL,eACE,GAAM,gCADR,iCAGA,0IACmC,uBAAYA,WAAW,KAAvB,qBADnC,aAEA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,sSAeL,0CAA2B,uBAAYA,WAAW,KAAvB,iBAA3B,sDAA0I,uBAAYA,WAAW,KAAvB,mBAA1I,eACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eADZ,mKAUL,8IAGH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/targetables/TargetableSet/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/data/auto-generated/pwa-buildpack/lib/WebpackTools/targetables/TargetableSet.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"targetableset\"\n    }}>{`TargetableSet`}</h1>\n    {\n      /*\n      The reference doc content is generated automatically from the source code.\n      To update this section, update the doc blocks in the source code\n      */\n    }\n\n    <Docs mdxType=\"Docs\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <p>{`Code examples for using the `}<inlineCode parentName=\"p\">{`TargetableSet`}</inlineCode>{` class.`}</p>\n    <h3 {...{\n      \"id\": \"import-the-class\"\n    }}>{`Import the class`}</h3>\n    <p>{`This class is available as a named import from `}<inlineCode parentName=\"p\">{`@magento/pwa-buildpack`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// The \\`TargetableSet\\` class is exported from \\`@magento/pwa-buildpack\\` as \\`Targetables\\`\nconst { Targetables } = require(\"@magento/pwa-buildpack\");\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"create-a-bound-instance\"\n    }}>{`Create a bound instance`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`TargetProvider`}</inlineCode>{` instance passed to your intercept function to create a `}<inlineCode parentName=\"p\">{`TargetableSet`}</inlineCode>{` instance bound to that `}<inlineCode parentName=\"p\">{`TargetProvider`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// The \\`TargetableSet\\` class is exported from \\`@magento/pwa-buildpack\\` as \\`Targetables\\`\nconst { Targetables } = require(\"@magento/pwa-buildpack\");\n\nmodule.exports = (targets) => {\n  const targetables = Targetables.using(targets);\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"create-a-targetable-object\"\n    }}>{`Create a Targetable object`}</h3>\n    <p>{`Use a bound `}<inlineCode parentName=\"p\">{`TargetableSet`}</inlineCode>{` instance to create a Targetable object given the module path (`}<inlineCode parentName=\"p\">{`modulePath`}</inlineCode>{`).\nThis path can be module-resolveable (e.g. `}<inlineCode parentName=\"p\">{`\"@magento/venia-ui/lib/components/Button\"`}</inlineCode>{`) or module-root-relative (e.g. `}<inlineCode parentName=\"p\">{`\"lib/components/Button\"`}</inlineCode>{`).`}</p>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{`\nIf the value is module-root-relative, the current module name is added automatically.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { Targetables } = require('@magento/pwa-buildpack')\n\nmodule.exports = targets => {\n    const targetables = Targetables.using(targets);\n\n    const MainComponent = targetables.module(\n        '@magento/venia-ui/lib/components/Main/main.js'\n    );\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"set-special-features\"\n    }}>{`Set special features`}</h3>\n    <p>{`Extensions with special files, like ES Modules, CSS Modules, GraphQL queries, and others, need to set feature flags in the build so their code is loaded correctly.\nTo do this, they can tap the builtin `}<inlineCode parentName=\"p\">{`specialFeatures`}</inlineCode>{` target.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`targets.of(\"@magento/pwa-buildpack\").specialFeatures.tap((features) => {\n  features[targets.name] = {\n    esModules: true,\n    graphqlQueries: true,\n    upward: true,\n  };\n});\n`}</code></pre>\n    <p>{`You can use a bound `}<inlineCode parentName=\"p\">{`TargetableSet`}</inlineCode>{` instance to do the same thing with less code using the `}<inlineCode parentName=\"p\">{`setSpecialFeatures()`}</inlineCode>{` function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`targetables.setSpecialFeatures(\"esModules\", \"graphqlQueries\", \"upward\");\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"define-environment-variables\"\n    }}>{`Define environment variables`}</h3>\n    <p>{`Extensions can add custom environment configuration settings to a storefront.\nTo do this, they can tap the builtin `}<inlineCode parentName=\"p\">{`envVarDefinitions`}</inlineCode>{` target.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`targets.of(\"@magento/pwa-buildpack\").envVarDefinitions.tap((defs) => {\n  defs.sections.push({\n    name: \"Support Chat\",\n    variables: [\n      {\n        name: \"SUPPORT_CHAT_API_KEY\",\n        type: \"str\",\n        desc: \"API key for the chat service\",\n      },\n    ],\n  });\n});\n`}</code></pre>\n    <p>{`You can use a bound `}<inlineCode parentName=\"p\">{`TargetableSet`}</inlineCode>{` instance to do the same with less code using the `}<inlineCode parentName=\"p\">{`defineEnvVars()`}</inlineCode>{` function.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`targetables.defineEnvVars(\"Support Chat\", [\n  {\n    name: \"SUPPORT_CHAT_API_KEY\",\n    type: \"str\",\n    desc: \"API key for the chat service\",\n  },\n]);\n`}</code></pre>\n    <p>{`This method also accepts an array of flag names, a flags object with boolean values, or a mixture of these as arguments.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}