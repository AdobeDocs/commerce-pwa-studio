"use strict";(self.webpackChunkcommerce_pwa_studio=self.webpackChunkcommerce_pwa_studio||[]).push([[1160],{16487:function(e,n,o){o.r(n),o.d(n,{_frontmatter:function(){return m},default:function(){return c}});var t=o(87462),i=o(63366),r=(o(15007),o(64983)),d=o(91515),a=o(65505),p=["components"],m={},s={_frontmatter:m},u=d.Z;function c(e){var n=e.components,o=(0,i.Z)(e,p);return(0,r.mdx)(u,(0,t.Z)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"usewindowsize"},"useWindowSize()"),(0,r.mdx)(a.Z,{mdxType:"Component"}),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)("p",null,"It is recommended to only create/use the WindowSizeContextProvider a single time at the top level of your app:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"return (\n  <WindowSizeContextProvider>\n    <App />\n  </WindowSizeContextProvider>\n);\n")),(0,r.mdx)("p",null,"Inside a component in your application, use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"useWindowSize()")," function to get the window size value that updates when the window size changes."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},'import { useWindowSize } from "@magento/peregrine";\n\nfunction MyComponent(props) {\n  const windowSize = useWindowSize();\n\n  return (\n    <span>\n      Inner window size: {windowSize.innerWidth} x {windowSize.innerHeight}\n    </span>\n  );\n}\n')))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-peregrine-hooks-use-window-size-index-md-5b24e3ba945deab55ad2.js.map