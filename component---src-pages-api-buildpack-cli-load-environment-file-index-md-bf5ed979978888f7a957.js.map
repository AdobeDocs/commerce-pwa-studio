{"version":3,"file":"component---src-pages-api-buildpack-cli-load-environment-file-index-md-bf5ed979978888f7a957.js","mappings":"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","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/cli/load-environment-file/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"load-environment-file\"\n    }}>{`Load environment file`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`load-env`}</inlineCode>{` subcommand for the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/cli/\"\n      }}><inlineCode parentName=\"a\">{`buildpack`}</inlineCode></a>{` CLI command loads and validates the local `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file according to the variable declarations in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/pwa-buildpack/envVarDefinitions.json\"\n      }}><inlineCode parentName=\"a\">{`envVarDefinitions.json`}</inlineCode></a>{` file.\nThis includes any deprecated or changed settings.\nWhen loading from `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`buildpack`}</inlineCode>{` does not override previously declared variables.`}</p>\n    <h2 {...{\n      \"id\": \"command-flags\"\n    }}>{`Command flags`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`--core-dev-mode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Used only by the core PWA Studio repository for quick setups of the core dev environment.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--core-dev-mode`}</inlineCode>{` flag tells `}<inlineCode parentName=\"p\">{`buildpack`}</inlineCode>{` to run `}<inlineCode parentName=\"p\">{`buildpack create-env-file --use-examples`}</inlineCode>{` if an existing `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file does not exist in the given directory path.`}</p>\n    <h2 {...{\n      \"id\": \"usage-tips\"\n    }}>{`Usage tips`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use the `}<inlineCode parentName=\"p\">{`load-env`}</inlineCode>{` command in NPM scripts instead of directly invoking it with `}<inlineCode parentName=\"p\">{`npx`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use a command, shell script, or spawned subprocess to override individual environment variables at start time.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The command does not require a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to be present.`}</p>\n        <p parentName=\"li\">{`If a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file is not present, the environment is still valid if another process or command sets the required variables.\nIf the file is not present and the variable `}<inlineCode parentName=\"p\">{`NODE_ENV`}</inlineCode>{` is not set to `}<inlineCode parentName=\"p\">{`production`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`buildpack`}</inlineCode>{` logs a warning.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"programmatic-api\"\n    }}>{`Programmatic API`}</h2>\n    <p>{`Adding the `}<inlineCode parentName=\"p\">{`@magento/pwa-buildpack`}</inlineCode>{` dependency to your project gives you access to the programmatic API for loading the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file.`}</p>\n    <h3 {...{\n      \"id\": \"loadenvironmentdirorenv-logger\"\n    }}><inlineCode parentName=\"h3\">{`loadEnvironment(dirOrEnv, [logger])`}</inlineCode></h3>\n    <p>{`Loads a given directory's `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file and provides a `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/general-concepts/configuration/\"\n      }}>{`configuration object`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const { loadEnvironment } = require(\"@magento/pwa-buildpack\");\n\nconst configuration = await loadEnvironment(process.cwd());\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"parameters\"\n    }}>{`Parameters`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`dirOrEnv`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode>{` path or `}<inlineCode parentName=\"td\">{`process.env`}</inlineCode>{` object`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Provides a path to the project root.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`logger`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An optional logger object to use instead of the default console.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`dirOrEnv`}</inlineCode>{` parameter is a `}<inlineCode parentName=\"p\">{`process.env`}</inlineCode>{` object, it will not attempt to parse a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file.`}</p>\n    <h4 {...{\n      \"id\": \"return-value\"\n    }}>{`Return value`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`loadEnvironment()`}</inlineCode>{` function returns a configuration object.`}</p>\n    <h3 {...{\n      \"id\": \"configuration-object\"\n    }}>{`Configuration object`}</h3>\n    <p>{`Use the configuration object returned by `}<inlineCode parentName=\"p\">{`loadEnvironment()`}</inlineCode>{` as a single source of truth for configuration.`}</p>\n    <h4 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h4>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Alias`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`env`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The raw environment object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isProduction`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`isProd`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`True if `}<inlineCode parentName=\"td\">{`NODE_ENV=production`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isDevelopment`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><inlineCode parentName=\"td\">{`isDev`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`True if `}<inlineCode parentName=\"td\">{`NODE_ENV=development`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isTest`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`-`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`True if `}<inlineCode parentName=\"td\">{`NODE_ENV=test`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h4 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h4>\n    <p>{`The configuration object provides methods that return settings in specific namespaces.\nThis lets you pass smaller objects instead of a single, plain object full of global configuration values.`}</p>\n    <p><inlineCode parentName=\"p\">{`section(sectionName)`}</inlineCode>{`\n: Returns a plain object with environment variables in the `}<inlineCode parentName=\"p\">{`sectionName`}</inlineCode>{` namespace.\nThe property keys are `}<a parentName=\"p\" {...{\n        \"href\": \"https://npmjs.com/package/camelspace\"\n      }}>{`camelCased`}</a>{` for convenience.`}</p>\n    <p><inlineCode parentName=\"p\">{`sections(...sectionNames)`}</inlineCode>{`\n: Returns a plain object with environment variables from the specified namespaces.\nThe namespaces are assigned to different camelCased properties named after the section name.`}</p>\n    <p><inlineCode parentName=\"p\">{`all()`}</inlineCode>{`\n: Returns the entire environment object, camelCased for convenience, with no namespace separations.`}</p>\n    <h3 {...{\n      \"id\": \"full-example-script\"\n    }}>{`Full example script`}</h3>\n    <p>{`The following example is a script that starts an `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/packages/upward/javascript/\"\n      }}>{`UPWARD-JS`}</a>{` server using configuration values loaded from the environment and `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file in the project path.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { loadEnvironment } from \"@magento/pwa-buildpack\";\n\n// Give \\`loadEnvironment\\` the path to the project root.\n// If the current file is in project root, use the Node builtin \\`__dirname\\`.\nconst configuration = await loadEnvironment(\"/Users/me/path/to/project\");\n\n// \\`loadEnvironment\\` has now read the contents of\n// \\`/Users/me/path/to/project/.env\\` and merged it with any environment\n// variables that were alredy set.\n\n// Create an UPWARD server using env vars that begin with \\`UPWARD_JS_\\`\ncreateUpwardServer(configuration.section(\"upwardJs\"));\n\n// If these environment variables are set:\n//\n// UPWARD_JS_HOST=https://local.upward/\n// UPWARD_JS_PORT=8081\n//\n// then \\`configuration.section('upwardJs')\\` produces this object:\n//\n// {\n//   host: 'https://local.upward',\n//   port: '8081'\n// }\n//\n// No other environment variables are included in this object unless they begin\n// with \\`UPWARD_JS_\\` which is the equivalent of \\`upwardJs\\` camel-cased.\n\n// The .all() method turns the whole environment into an object, with all\n// CONSTANT_CASE names turned into camelCase names.\nconst allConfig = configuration.all();\n\n// This object will have one property for each set environment variable,\n// including the UPWARD variables named above.\n// But \\`configuration.all()\\` does not namespace them, they have longer names:\n//\n// {\n//   upwardJsHost: 'https://local.upward',\n//   upwardJsPort: '8081'\n// }\n//\n// This huge object defeats the purpose of loadEnvironment() and should\n// only be used for debugging.\n\n// Instead, let's create an UPWARD server combining two environment variable\n// sections with hardcoded overrides to some values.\ncreateUpwardServer({\n  ...configuration.section(\"upwardJs\"),\n  ...configuration.section(\"magento\"),\n  bindLocal: true,\n});\n\n// This uses JavaScript object spreading to combine several sections of\n// configuration and override a value.\n// If the environment contains these values:\n//\n// UPWARD_JS_HOST=https://local.pwadev\n// UPWARD_JS_PORT=443\n// UPWARD_JS_BIND_LOCAL=\n// MAGENTO_BACKEND_URL=https://local.magento\n//\n// Then the above code passes the following object to \\`createUpwardServer\\`:\n//\n// {\n//   host: 'https://local.pwadev',\n//   port: '443',\n//   backendUrl: 'https://local.magento',\n//   bindLocal: true\n// }\n\n// The \\`sections()\\` method can split an env object into named subsections:\ncreateUpwardServer(configuration.sections(\"upwardJs\", \"magento\"));\n\n// Given the same environment variables as above, this code will pass the\n// following to \\`createUpwardServer\\`:\n//\n// {\n//   upwardJs: {\n//     host: 'https://local.pwadev',\n//     port: '443',\n//     bindLocal: '' // the null string is used as a falsy value\n//   },\n//   magento: {\n//     backendUrl: 'https://local.magento'\n//   }\n// }\n//\n// (The above is not the actual config object format for \\`createUpwardServer\\`,\n// but if it was, that's how you'd make it.)\n\n// Use the convenience properties \\`isProd\\` and \\`isDev\\` instead of testing\n// \\`process.env.NODE_ENV\\` directly:\nif (configuration.isDev) {\n  console.log(\"Development mode\");\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}