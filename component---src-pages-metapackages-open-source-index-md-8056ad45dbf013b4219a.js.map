{"version":3,"file":"component---src-pages-metapackages-open-source-index-md-8056ad45dbf013b4219a.js","mappings":"kSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,uCAAqC,wCAE7CA,EAAAA,EAAAA,KAAA,2HACAA,EAAAA,EAAAA,KAAA,mGACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,gDAA8C,iDAEtDA,EAAAA,EAAAA,KAAA,uGACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,cAAeH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,iDACzFH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,mFAIlCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,eAAgBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,0BAAwC,kFACpGH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,eAAgBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,qBAAqBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,+DACnKH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,8CAIlCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,iBAAkBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,+BAA+BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,iBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,sDAAsDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,2BAA2BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,eAExbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,cAAeH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,qEAAqEH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,4CAA4CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,yDAAyDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,gBACpZH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,8DAMtCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,gBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,kBAClFH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,sCAKpCH,EAAAA,EAAAA,KAAA,gEAA0DA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,wBAAwBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,6CACnLH,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,wDACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,sDAErBH,EAAAA,EAAAA,KAAA,sDAAgDA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,uBAAuBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,WAAyB,kBAAkBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,6BAA2C,oBAAoBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACvS,KAAQ,oFAAkF,4CACzC,MACrDH,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,gCAErCA,EAAAA,EAAAA,KAAA,yGACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,oBAAqBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,kCAAkCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,oBACxKH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,wCAIlCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,uCAAwCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,gDAClHH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,wGAGhCH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,uDAC5DH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,gHAKpCH,EAAAA,EAAAA,KAAA,MACE,GAAM,2CAAyC,4CAEjDA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,QAASH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACrC,KAAQ,4BAA0B,4BACD,6DAA6DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,mCAC3JH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,4HASlCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,gBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,eAA6B,8CAA8CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,mCACjMH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClC,UAAa,iBAAe,qDAMlCH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,gBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,oCAAoCH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,OAE1LH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,QAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAiC,oBAAoBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,YAErKH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OACbH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,MAAI,sDAK1B,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/metapackages/open-source/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"install-the-open-source-metapackage\"\n    }}>{`Install the Open Source metapackage`}</h1>\n    <p>{`While PWA uses the standard GraphQL workflow, the metapackage adds capabilities for some PWA Studio features.`}</p>\n    <p>{`You must install this metapackage in all projects using PWA Studio 12.1.0 and higher.`}</p>\n    <h2 {...{\n      \"id\": \"installation-as-a-git-based-composer-package\"\n    }}>{`Installation as a git-based composer package`}</h2>\n    <p>{`To set up and develop your PWA extension modules locally, use the following instructions.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone the `}<inlineCode parentName=\"p\">{`magento2-pwa`}</inlineCode>{` repository into your vendor directory name:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git clone git@github.com:magento/magento2-pwa.git ext/magento/magento2-pwa\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`magento2/composer.json`}</inlineCode>{` settings to create a better development workflow for your extension modules:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`minimum-stability`}</inlineCode>{` for packages to `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{`. This allows for the installation of development modules:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`composer config minimum-stability dev\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`To work with `}<inlineCode parentName=\"p\">{`stable`}</inlineCode>{` packages, ensure that the `}<inlineCode parentName=\"p\">{`prefer-stable`}</inlineCode>{` property is `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`. This property should already be included in the `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file, right above the `}<inlineCode parentName=\"p\">{`minimum-stability`}</inlineCode>{` setting.`}</p>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Configure `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{` to find new extension modules. The following command configures `}<inlineCode parentName=\"p\">{`composer`}</inlineCode>{` to treat any extension code inside the `}<inlineCode parentName=\"p\">{`ext`}</inlineCode>{` directory as a package and creates a symlink to the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` directory:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`composer config repositories.ext path \"./ext/*/*/*\"\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install the `}<inlineCode parentName=\"p\">{`pwa`}</inlineCode>{` metapackage:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`composer require magento/pwa\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`At this point, you should see symlinks for all the `}<inlineCode parentName=\"p\">{`pwa`}</inlineCode>{` modules inside the `}<inlineCode parentName=\"p\">{`vendor`}</inlineCode>{` directory. These symlinks allow you to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Run a Magento installation with additional modules.`}</li>\n      <li parentName=\"ul\">{`Develop locally using the standard git workflow.`}</li>\n    </ul>\n    <p>{`You may need to ensure that there are no `}<inlineCode parentName=\"p\">{`Magento_PWA*`}</inlineCode>{` modules listed as `}<inlineCode parentName=\"p\">{`enabled`}</inlineCode>{` when you run `}<inlineCode parentName=\"p\">{`bin/magento module:status`}</inlineCode>{`. If there are, `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/build/component-management/\"\n      }}>{`follow the docs on how to enable modules`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"setting-up-the-git-workflow\"\n    }}>{`Setting up the Git workflow`}</h2>\n    <p>{`To improve the developer experience even further, you can add these configurations as well:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Exclude all the `}<inlineCode parentName=\"p\">{`ext`}</inlineCode>{` directories in the project's `}<inlineCode parentName=\"p\">{`.git`}</inlineCode>{` configuration:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`echo ext >> ./.git/info/exclude\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Skip your project's root directory `}<inlineCode parentName=\"p\">{`composer.\\\\*`}</inlineCode>{` files to avoid committing them by mistake:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git update-index --skip-worktree composer.json && git update-index --skip-worktree composer.lock\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`NOTE:`}</strong>{` You can reverse this operation anytime as needed:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git update-index --no-skip-worktree composer.json && git update-index --no-skip-worktree composer.lock\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"cloud-deployment-extension-installation\"\n    }}>{`Cloud deployment extension installation`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add `}<a parentName=\"p\" {...{\n            \"href\": \"https://repo.magento.com\"\n          }}>{`https://repo.magento.com`}</a>{` as a composer repository by adding the following to the `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file of your cloud instances.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`\"repositories\": {\n    \"repo\": {\n        \"type\": \"composer\",\n        \"url\": \"https://repo.magento.com\"\n    }\n},\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Require the `}<inlineCode parentName=\"p\">{`magento/pwa`}</inlineCode>{` extension by adding the following to the `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{` file of your cloud instances.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`\"require\": {\n    \"magento/pwa\": \"0.2.1\"\n},\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Ensure your `}<inlineCode parentName=\"p\">{`auth.json`}</inlineCode>{` file has valid credentials for `}<inlineCode parentName=\"p\">{`repo.magento.com`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`composer update`}</inlineCode>{` to update your `}<inlineCode parentName=\"p\">{`composer.lock`}</inlineCode>{` file.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Push the changes and deploy your cloud instance.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}