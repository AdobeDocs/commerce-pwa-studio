{"version":3,"file":"component---src-pages-tutorials-basic-modifications-add-static-route-index-md-486c6f099802f25ae2ee.js","mappings":"kSAMaA,EAAe,CAAC,EAKvBC,GAJgBC,EAIY,cAJJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5BI,EAAAA,EAAAA,KAAA,MAASH,EAClB,GAHsBD,MAKtB,MAAMK,EAAc,CAClBP,gBAEIQ,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIR,GAAKU,EAAAA,EAAAA,GAAAF,EAAAG,GAER,OAAOR,EAAAA,EAAAA,KAACE,GAASO,EAAAA,EAAAA,GAAA,GAAKR,EAAiBJ,EAAK,CAAES,WAAYA,EAAYI,QAAQ,eAG5EV,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,8EAAwEA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IAClF,KAAQ,kDAAgD,eACpC,sLAExBX,EAAAA,EAAAA,KAAA,MACE,GAAM,YAAU,aAElBA,EAAAA,EAAAA,KAAA,mHACAA,EAAAA,EAAAA,KAAA,gEACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,4DACnBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,yEACnBX,EAAAA,EAAAA,KAAA,MAAIW,WAAW,MAAI,wFAErBX,EAAAA,EAAAA,KAAA,kDAA4CA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACtD,KAAQ,yDAAuD,WAC/C,MACpBX,EAAAA,EAAAA,KAACL,EAAW,CAACiB,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjDV,EAAAA,EAAAA,KAAA,iGAA2FA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACrG,KAAQ,oDAAkD,iBACpC,eAC1BX,EAAAA,EAAAA,KAAA,MACE,GAAM,iCAA+B,kCAEvCA,EAAAA,EAAAA,KAAA,iEAA2DA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,cAA4B,0BAA0BX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,OAAqB,4EAE1LX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,+BAG9BX,EAAAA,EAAAA,KAAA,MACE,GAAM,mCAAiC,oCAEzCA,EAAAA,EAAAA,KAAA,wNAGAA,EAAAA,EAAAA,KAAA,MACE,GAAM,8BAA4B,+BAEpCA,EAAAA,EAAAA,KAAA,wFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,4CAG9BX,EAAAA,EAAAA,KAAA,MACE,GAAM,gCAA8B,WACxBA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAI,mBAAiC,YAC1EX,EAAAA,EAAAA,KAAA,mEAA6DA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,mBAAiC,sCACxHX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,gBAAc,yeA2B/BX,EAAAA,EAAAA,KAAA,0FACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,uBAAqB,WACfA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,MAAI,YAA0B,UACnEX,EAAAA,EAAAA,KAAA,oEAA8DA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,YAA0B,oGACpEX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,YAA0B,4DAClGX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,+FAK9BX,EAAAA,EAAAA,KAAA,MACE,GAAM,wCAAsC,yCAE9CA,EAAAA,EAAAA,KAAA,qQAEAA,EAAAA,EAAAA,KAAA,MACE,GAAM,4BAA0B,6BAElCA,EAAAA,EAAAA,KAAA,wLAEAA,EAAAA,EAAAA,KAAA,wDAAkDA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,eAA6B,gBACzGX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,qEAI9BX,EAAAA,EAAAA,KAAA,wBAAkBA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,kCAAgD,wCAC5FX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,eAAa,6SAY9BX,EAAAA,EAAAA,KAAA,gDAA0CA,EAAAA,EAAAA,KAAA,KAAGW,WAAW,IACpD,KAAQ,gEAA8D,iBAChD,QAAQX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,qBAAmC,sKAE/FX,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,gCAErCA,EAAAA,EAAAA,KAAA,wDAAkDA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,gCAA8C,+BAA+BX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,gBAA8B,2BACpMX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,kCAAgD,oDACvFX,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,MAClB,UAAa,iBAAe,iMAYhCX,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,uBAE5BA,EAAAA,EAAAA,KAAA,yCAAmCA,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,cAA4B,QAAQX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,gBAA8B,yBAAyBX,EAAAA,EAAAA,KAAA,cAAYW,WAAW,KAAG,mBAAiC,YAC7OX,EAAAA,EAAAA,KAAA,+DACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMW,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDX,EAAAA,EAAAA,KAAA,QAAMW,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,UACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdX,EAAAA,EAAAA,KAAA,WAASW,WAAW,QAAM,gBAClBX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,UACnB,OAAU,CAAC,+FAAgG,+FAAgG,gGAC3M,MAAS,kCACT,KAAQ,eACE,gBACVX,EAAAA,EAAAA,KAAA,UAAQW,WAAW,UACnB,OAAU,CAAC,8FAA+F,8FAA+F,+FACzM,MAAS,kCACT,KAAQ,cACE,gBACVX,EAAAA,EAAAA,KAAA,OAAKW,WAAW,UAChB,UAAa,0BACb,IAAO,yFACP,IAAO,kBACP,MAAS,kBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBX,EAAAA,EAAAA,KAAA,MACE,GAAM,mBAAiB,oBAEzBA,EAAAA,EAAAA,KAAA,wEAGJ,CAEAI,EAAWU,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/tutorials/basic-modifications/add-static-route/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-static-route\"\n    }}>{`Add a static route`}</h1>\n    <p>{`Adobe Commerce and Magento Open Source's built in CMS system and `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/integrations/pagebuilder/\"\n      }}>{`PageBuilder`}</a>{` feature lets you create highly customized content pages for your storefront, but\nsometimes you need a page that fulfills a specific function, such as a checkout or login page.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`This tutorial provides steps for creating a custom, static route for these types of functional pages.`}</p>\n    <p>{`By the end of this tutorial, you will know how to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Define a custom React component to render route content`}</li>\n      <li parentName=\"ul\">{`Use the extensibility framework to tap into Venia UI's routes target`}</li>\n      <li parentName=\"ul\">{`Add a new static route to the routes list which renders the custom React component`}</li>\n    </ul>\n    <p>{`For more information on routing, see `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/general-concepts/routing/\"\n      }}>{`Routing`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`This tutorial requires you to have a project set up using the steps provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/tutorials/setup-storefront/\"\n      }}>{`Project Setup`}</a>{` tutorial.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-components-directory\"\n    }}>{`Create a components directory`}</h2>\n    <p>{`If your project does not already have one, create a `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` directory under your `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory.\nThis directory will hold your project's custom components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/components\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"define-a-custom-react-component\"\n    }}>{`Define a custom React component`}</h2>\n    <p>{`Every route needs a component to render the content.\nFor this tutorial, you will define a component that renders a simple greeting on the page.\nThis component will be assigned a route in a later step.`}</p>\n    <h3 {...{\n      \"id\": \"create-component-directory\"\n    }}>{`Create component directory`}</h3>\n    <p>{`Create the directory to hold the code for a custom GreetingPage component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/components/GreetingPage\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"create-greetingpagejs-module\"\n    }}>{`Create `}<inlineCode parentName=\"h3\">{`greetingPage.js`}</inlineCode>{` module`}</h3>\n    <p>{`Inside the GreetingPage component directory, create a `}<inlineCode parentName=\"p\">{`greetingPage.js`}</inlineCode>{` file with the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/* src/components/GreetingPage/greetingPage.js */\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst hi = {\n  textAlign: \"center\",\n  margin: \"1rem\",\n};\nconst wave = {\n  ...hi,\n  fontSize: \"5rem\",\n};\n\nconst GreetingPage = () => {\n  const { who = \"nobody\" } = useParams();\n  return (\n    <div>\n      <h1 style={hi}>Hello, {who}!</h1>\n      <h1 style={wave}>{\"\\\\uD83D\\\\uDC4B\"}</h1>\n    </div>\n  );\n};\n\nexport default GreetingPage;\n`}</code></pre>\n    <p>{`This component uses a URL parameter to render a personal greeting on a page.`}</p>\n    <h3 {...{\n      \"id\": \"create-indexjs-file\"\n    }}>{`Create `}<inlineCode parentName=\"h3\">{`index.js`}</inlineCode>{` file`}</h3>\n    <p>{`Inside the GreetingPage component directory, create an `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file that exports the GreetingPage component.\nThis pattern of exposing the module through the `}<inlineCode parentName=\"p\">{`index.js`}</inlineCode>{` file is the same pattern used in the Venia UI package.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`/* src/components/GreetingPage/index.js */\n\nexport { default } from \"./greetingPage\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"tap-into-the-extensibility-framework\"\n    }}>{`Tap into the extensibility framework`}</h2>\n    <p>{`In version 7.0.0, PWA Studio introduced its framework for extending storefront functionality.\nOne such extension point, gives you the ability to edit the list of routes without copying over the Routes component and its parents in the render tree.`}</p>\n    <h3 {...{\n      \"id\": \"create-an-intercept-file\"\n    }}>{`Create an intercept file`}</h3>\n    <p>{`An intercept file is where your storefront or plugin interacts with the extensibility framework.\nThere is no strict rule on where to create this file or what to name it.`}</p>\n    <p>{`For this tutorial, create the file under a `}<inlineCode parentName=\"p\">{`src/targets`}</inlineCode>{` directory.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`mkdir -p src/targets\ntouch -p src/targets/local-intercept.js\n`}</code></pre>\n    <p>{`Inside the `}<inlineCode parentName=\"p\">{`src/targets/local-intercept.js`}</inlineCode>{` file, write the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = (targets) => {\n  targets.of(\"@magento/venia-ui\").routes.tap((routes) => {\n    routes.push({\n      name: \"MyGreetingRoute\",\n      pattern: \"/greeting/:who?\",\n      path: require.resolve(\"../components/GreetingPage/greetingPage.js\"),\n    });\n    return routes;\n  });\n};\n`}</code></pre>\n    <p>{`The code in this file accesses the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/peregrine/extension-points/targets/\"\n      }}>{`routes target`}</a>{` of `}<inlineCode parentName=\"p\">{`@magento/venia-ui`}</inlineCode>{` and adds a new entry to the list.\nIt adds a new route definition object that specifies the pattern for a new route and which page component renders that route.`}</p>\n    <h3 {...{\n      \"id\": \"register-the-intercept-file\"\n    }}>{`Register the intercept file`}</h3>\n    <p>{`Add the path to your intercept file in the `}<inlineCode parentName=\"p\">{`pwa-studio.targets.intercept`}</inlineCode>{` section of your project's `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` file.\nThis registers `}<inlineCode parentName=\"p\">{`src/targets/local-intercept.js`}</inlineCode>{` as an intercept file during the build process.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  \"engines\": {\n    \"node\": \">=10.x\",\n    \"yarn\": \">=1.12.0\"\n  },\n  \"keywords\": [],\n+ \"pwa-studio\": {\n+   \"targets\": {\n+     \"intercept\": \"src/targets/local-intercept\"\n+   }\n+ }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"view-route-content\"\n    }}>{`View route content`}</h2>\n    <p>{`Start your dev server using `}<inlineCode parentName=\"p\">{`yarn start`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`yarn develop`}</inlineCode>{` and navigate to the `}<inlineCode parentName=\"p\">{`/greeting/world`}</inlineCode>{` route.`}</p>\n    <p>{`You should see the following content on the page:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"843px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"29.375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/5530d/hello-world-jsx.webp 320w\", \"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/0c8fb/hello-world-jsx.webp 640w\", \"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/e4748/hello-world-jsx.webp 843w\"],\n            \"sizes\": \"(max-width: 843px) 100vw, 843px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/dd4a7/hello-world-jsx.png 320w\", \"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/0f09e/hello-world-jsx.png 640w\", \"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/c96b6/hello-world-jsx.png 843w\"],\n            \"sizes\": \"(max-width: 843px) 100vw, 843px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-pwa-studio/static/987e904e9ce0ee7f320e2b5f26aa9a33/c96b6/hello-world-jsx.png\",\n            \"alt\": \"hello world jsx\",\n            \"title\": \"hello world jsx\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"congratulations\"\n    }}>{`Congratulations`}</h2>\n    <p>{`You just created a static route in your storefront project!`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","_extends","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}