{"version":3,"file":"component---src-pages-api-buildpack-webpack-magento-root-components-plugin-index-md-00577a252cb24f18da25.js","mappings":"4RAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SAACJ,GAAS,UAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,kCAAgC,mCAExC,0CAA2B,cAAGC,WAAW,IACrC,KAAQ,iDAA+C,iBACjC,qEAC1B,eACE,GAAM,WAAS,YAEjB,8BAAe,uBAAYA,WAAW,KAAG,kBAAgC,8DACzE,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eAAa,6FAQ9B,4DAA6C,uBAAYA,WAAW,KAAG,SAAuB,MAAM,uBAAYA,WAAW,KAAG,SAAuB,UAAU,uBAAYA,WAAW,KAAG,SAAuB,wDACjK,cAAGA,WAAW,IACzD,KAAQ,yDACP,uBAAYA,WAAW,KAAG,uBAAwC,gCACvE,eACE,GAAM,iBAAe,kBAEvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBAAqB,gjBAyB1C,CAEAJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/api/buildpack/webpack/magento-root-components-plugin/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"magento-root-components-plugin\"\n    }}>{`Magento root components plugin`}</h1>\n    <p>{`This plugin creates `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/guides/code-splitting/\"\n      }}>{`unique chunks`}</a>{` for each Root Component in a Magento PWA project and extension.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Given a `}<inlineCode parentName=\"p\">{`RootComponents`}</inlineCode>{` directory in a PWA project with the following structure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`├── Page1\n│   └── index.js\n├── Page2\n│   └── index.js\n└── Page3\n    └── index.js\n`}</code></pre>\n    <p>{`This plugin creates unique chunks for `}<inlineCode parentName=\"p\">{`Page1`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Page2`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`Page3`}</inlineCode>{`.\nFurther webpack optimization techniques, such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/plugins/commons-chunk-plugin/\"\n      }}><inlineCode parentName=\"a\">{`CommonsChunkPlugin`}</inlineCode></a>{`, can be applied if needed.`}</p>\n    <h2 {...{\n      \"id\": \"example-usage\"\n    }}>{`Example usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// webpack.config.js\n\nconst path = require(\"path\");\nconst { MagentoRootComponentsPlugin } = require(\"@magento/pwa-buildpack\");\n\nmodule.exports = {\n  entry: {\n    main: path.join(__dirname, \"src\"),\n  },\n  output: {\n    path: path.join(__dirname, \"dist\"),\n    filename: \"[name].js\",\n    chunkFilename: \"[name].chunk.js\",\n  },\n  plugins: [\n    new MagentoRootComponentsPlugin({\n      rootComponentsDirs: [path.join(__dirname, \"src/RootComponents\")], // optional\n      manifestFileName: \"roots-manifest.json\", // optional\n    }),\n  ],\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}