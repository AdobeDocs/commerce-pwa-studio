{"version":3,"file":"component---src-pages-integrations-pagebuilder-custom-components-setup-index-md-069ae4e0d68e8841e750.js","mappings":"kSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,qBAE1BA,EAAAA,EAAAA,KAAA,+bACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,OAAKG,WAAW,IACf,IAAO,uFACP,IAAO,4BAEXH,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,iCAErCA,EAAAA,EAAAA,KAAA,gJACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAI,uBAAiC,mHAC5EH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAI,kBAA4B,oJAAoJH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,mBAAiC,MACvRH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAI,mBAA6B,wJAAwJH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,oBAAkC,MAC7RH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,OAAKH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,MAAI,YAAsB,+EAEnEH,EAAAA,EAAAA,KAAA,4EAAsEA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,aAAaH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,iOACnMH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,qGAAsG,sGACjH,MAAS,kCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,oGAAqG,qGAChH,MAAS,kCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,+FACP,IAAO,2BACP,MAAS,2BACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,kCAA4BA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,6CACpFH,EAAAA,EAAAA,KAAA,MACE,GAAM,sBAAoB,wBAE5BA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,0GAO9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,mBAAiB,qBAEzBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,gBAAc,mHAQ/BH,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,oBAExBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,gBAAc,mpBA2B/BH,EAAAA,EAAAA,KAAA,MACE,GAAM,WAAS,aAEjBA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,iDAG9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,8BAA4B,gCAEpCA,EAAAA,EAAAA,KAAA,sKAAgKA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,kLAAkLH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,MAC5bH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,qGAAsG,sGACjH,MAAS,kCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,oGAAqG,qGAChH,MAAS,kCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,+FACP,IAAO,wBACP,MAAS,wBACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,sBAAgBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,cAAcH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,UAAUH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,+DAC3MH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,gGAG9BH,EAAAA,EAAAA,KAAA,+CAAyCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,SAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,iDAAiDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,OAAqB,cAAcH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,4CAA4CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,4CAA4CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,0CAClhBH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,wJAM9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,wCAAsC,yCAE9CA,EAAAA,EAAAA,KAAA,oHAA8GA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,oKAAoKH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAClV,KAAQ,0DAAwD,sBACrC,6BAC/BH,EAAAA,EAAAA,KAAA,kCAA4BA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,yIAClFH,EAAAA,EAAAA,KAAA,+EAAyEA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,4BAA4BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,yDAChNH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,2EAG9BH,EAAAA,EAAAA,KAAA,MACE,GAAM,4BAA0B,6BAElCA,EAAAA,EAAAA,KAAA,2GAAqGA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,aAA2B,mEAC1JH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,UACb,YAEDH,EAAAA,EAAAA,KAAA,QAAMG,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,sBACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAEX,QACdH,EAAAA,EAAAA,KAAA,WAASG,WAAW,QAAM,gBAClBH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,wGAAyG,wGAAyG,yGAC7N,MAAS,kCACT,KAAQ,eACE,gBACVH,EAAAA,EAAAA,KAAA,UAAQG,WAAW,UACnB,OAAU,CAAC,uGAAwG,uGAAwG,wGAC3N,MAAS,kCACT,KAAQ,cACE,gBACVH,EAAAA,EAAAA,KAAA,OAAKG,WAAW,UAChB,UAAa,0BACb,IAAO,kGACP,IAAO,oDACP,MAAS,oDACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OAEH,cACC,YAEhBH,EAAAA,EAAAA,KAAA,uIACAA,EAAAA,EAAAA,KAAA,MACE,GAAM,mBAAiB,oBAEzBA,EAAAA,EAAAA,KAAA,qDACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,gEACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,uDAAwDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,aAA2B,WAAWH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,gBAA8B,+CAI3M,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/integrations/pagebuilder/custom-components/setup/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"set-up-component\"\n    }}>{`Set up component`}</h1>\n    <p>{`Setting up your component is about getting the essential component files in place so that your component is actively participating in the Page Builder component framework. After you create these files and wire them into the component framework, you can focus all your attention on developing each file to faithfully recreate your content type as a PWA component. The following steps highlight the tasks for setting up your component:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/commerce-pwa-studio/assets/947d6a2de7d959ebc296251141d1059a/SetupComponentSteps.svg\",\n        \"alt\": \"Component setup steps\"\n      }}></img></p>\n    <h2 {...{\n      \"id\": \"step-1-create-starter-files\"\n    }}>{`Step 1: Create starter files`}</h2>\n    <p>{`The first thing you need to do within PWA Studio is create the directory and skeleton files needed for your component, as follows:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`configAggregator.js`}</strong>{` (required) - Function to retrieve content and styling properties from your content type's master format HTML.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`myComponent.js`}</strong>{` (required) - React component for populating properties that correspond to the original Page Builder content type. For our ExampleQuote, we use `}<inlineCode parentName=\"li\">{`exampleQuote.js`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`myComponent.css`}</strong>{` (optional but usually needed) - CSS classes that provide addition styles needed to present your component as desired. For our ExampleQuote, we use `}<inlineCode parentName=\"li\">{`exampleQuote.css`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`index.js`}</strong>{` (required) - Entry file needed to identify your component in PWA Studio.`}</li>\n    </ul>\n    <p>{`Currently, you need to add your content type's component, like `}<inlineCode parentName=\"p\">{`ExampleQuote`}</inlineCode>{`, to the `}<inlineCode parentName=\"p\">{`ContentTypes`}</inlineCode>{` directory, where the native Page Builder components are kept. This will change when we implement different rules for extending Page Builder components. But for now, add your custom content type components as shown here:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"606px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"58.4375%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/6621ec5b70d3e49bf8b43f4ad435bc78/5530d/PageBuilderFilesSetup.webp 320w\", \"/commerce-pwa-studio/static/6621ec5b70d3e49bf8b43f4ad435bc78/e5c51/PageBuilderFilesSetup.webp 606w\"],\n            \"sizes\": \"(max-width: 606px) 100vw, 606px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/6621ec5b70d3e49bf8b43f4ad435bc78/dd4a7/PageBuilderFilesSetup.png 320w\", \"/commerce-pwa-studio/static/6621ec5b70d3e49bf8b43f4ad435bc78/cec09/PageBuilderFilesSetup.png 606w\"],\n            \"sizes\": \"(max-width: 606px) 100vw, 606px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-pwa-studio/static/6621ec5b70d3e49bf8b43f4ad435bc78/cec09/PageBuilderFilesSetup.png\",\n            \"alt\": \"Component file structure\",\n            \"title\": \"Component file structure\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Starter code for the `}<inlineCode parentName=\"p\">{`ExampleQuote`}</inlineCode>{` component files is provided as follows.`}</p>\n    <h3 {...{\n      \"id\": \"configaggregatorjs\"\n    }}>{`configAggregator.js`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default (node, props) => {\n  return {\n    // Retrieve properties from node here\n  };\n};\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"examplequotecss\"\n    }}>{`exampleQuote.css`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`/* class for testing setup */\n.testClass {\n  line-height: 1.4em;\n  font-size: 1em;\n  color: #0066cc;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"examplequotejs\"\n    }}>{`exampleQuote.js`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\nimport { mergeClasses } from \"../../../../../classify\";\nimport defaultClasses from \"./exampleQuote.css\";\nimport { shape, string } from \"prop-types\";\n\n// Component for testing setup\nconst ExampleQuote = (props) => {\n  const classes = mergeClasses(defaultClasses, props.classes);\n  return (\n    <div className={classes.testClass}>\n      <div>Content Type: {props.contentType}</div>\n      <div>Appearance: {props.appearance}</div>\n    </div>\n  );\n};\n\nExampleQuote.propTypes = {\n  classes: shape({\n    testClass: string,\n  }),\n  contentType: string,\n  appearance: string,\n};\n\nexport default ExampleQuote;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"indexjs\"\n    }}>{`index.js`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export { default } from \"./exampleQuote\";\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-configure-component\"\n    }}>{`Step 2: Configure component`}</h2>\n    <p>{`Configuring your component is about connecting your component to the Page Builder component framework. The framework provides a static config object (in `}<inlineCode parentName=\"p\">{`config.js`}</inlineCode>{`) that acts as a kind of registry of content types supported within PWA Studio. To include support for your custom content type component, you'll need to add an entry to the `}<inlineCode parentName=\"p\">{`config.js`}</inlineCode>{`:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"606px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"20.3125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/326618482ec26eb6b46af06f83617523/5530d/PageBuilderConfigFile.webp 320w\", \"/commerce-pwa-studio/static/326618482ec26eb6b46af06f83617523/e5c51/PageBuilderConfigFile.webp 606w\"],\n            \"sizes\": \"(max-width: 606px) 100vw, 606px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/326618482ec26eb6b46af06f83617523/dd4a7/PageBuilderConfigFile.png 320w\", \"/commerce-pwa-studio/static/326618482ec26eb6b46af06f83617523/cec09/PageBuilderConfigFile.png 606w\"],\n            \"sizes\": \"(max-width: 606px) 100vw, 606px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-pwa-studio/static/326618482ec26eb6b46af06f83617523/cec09/PageBuilderConfigFile.png\",\n            \"alt\": \"Component config file\",\n            \"title\": \"Component config file\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Open the `}<inlineCode parentName=\"p\">{`config.js`}</inlineCode>{` file and `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` your `}<inlineCode parentName=\"p\">{`configAggregator`}</inlineCode>{`. The import statement for our ExampleQuote is shown here:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import exampleQuoteConfigAggregator from \"./ContentTypes/ExampleQuote/configAggregator\";\n`}</code></pre>\n    <p>{`Add an entry that references your `}<inlineCode parentName=\"p\">{`configAggregator`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{`, using the name of your content type as the `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{`. For our `}<inlineCode parentName=\"p\">{`ExampleQuote`}</inlineCode>{`, the name of the Quote content type is `}<inlineCode parentName=\"p\">{`example_quote`}</inlineCode>{`, so the entry for our Quote component (`}<inlineCode parentName=\"p\">{`ExampleQuote`}</inlineCode>{`) in the config file looks like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`Quote_Custom: {\n    configAggregator: exampleQuoteConfigAggregator,\n    component: React.lazy(() => import('./ContentTypes/ExampleQuote'))\n},\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"a-note-about-lazy-loading-components\"\n    }}>{`A note about lazy loading components`}</h3>\n    <p>{`When building PWAs, performance is key. That's why we recommend loading less critical components using `}<inlineCode parentName=\"p\">{`React.lazy`}</inlineCode>{`. This will result in a very slight delay in that content rendering but will ensure we don't bloat the bundle size for the store. For more information, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/code-splitting.html#reactlazy\"\n      }}>{`react lazy loading`}</a>{` docs on the React site.`}</p>\n    <p>{`By default, we apply `}<inlineCode parentName=\"p\">{`React.lazy`}</inlineCode>{` to the following content types: Banner, Slider, Slide Item, Tab, Tab Item, Button, Button Item, Block, Products, HTML, and Divider.`}</p>\n    <p>{`To have your component loaded lazily you simply have to wrap your `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` reference in a call to `}<inlineCode parentName=\"p\">{`React.lazy`}</inlineCode>{` as previously shown for the ExampleQuote component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`component: React.lazy(() => import(\"./ContentTypes/ExampleQuote\"));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"test-the-component-setup\"\n    }}>{`Test the component setup`}</h2>\n    <p>{`After adding these files and hooking them up to the framework through the configuration file (`}<inlineCode parentName=\"p\">{`config.js`}</inlineCode>{`), your skeleton component will appear on the Venia home page:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"650px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"28.750000000000004%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/5530d/ConfigureComponentOutput.webp 320w\", \"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/0c8fb/ConfigureComponentOutput.webp 640w\", \"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/309d5/ConfigureComponentOutput.webp 650w\"],\n            \"sizes\": \"(max-width: 650px) 100vw, 650px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/dd4a7/ConfigureComponentOutput.png 320w\", \"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/0f09e/ConfigureComponentOutput.png 640w\", \"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/663f3/ConfigureComponentOutput.png 650w\"],\n            \"sizes\": \"(max-width: 650px) 100vw, 650px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-pwa-studio/static/759e9690d2efa34cbbdb9af9923f3b0c/663f3/ConfigureComponentOutput.png\",\n            \"alt\": \"ExampleQuote component rendered with starter code\",\n            \"title\": \"ExampleQuote component rendered with starter code\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`If you see this rendering without errors in the Venia app, you are ready to start developing your content type component.`}</p>\n    <h2 {...{\n      \"id\": \"troubleshooting\"\n    }}>{`Troubleshooting`}</h2>\n    <p>{`If you have errors, make sure you have:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Copied the correct starter code for each of the four files.`}</li>\n      <li parentName=\"ol\">{`Added the correct name of your content type to the `}<inlineCode parentName=\"li\">{`config.js`}</inlineCode>{` file (`}<inlineCode parentName=\"li\">{`Quote_Custom`}</inlineCode>{` if you are using the Quote content type).`}</li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}