{"version":3,"file":"component---src-pages-tutorials-targets-change-static-assets-directory-index-md-3797f0e48622973a30cd.js","mappings":"iSAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,kCAAgC,mCAExCA,EAAAA,EAAAA,KAAA,4FAAsFA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAChG,KAAQ,sFACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,cAAkB,cAAcH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,uBAAuBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,8FAC7IH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,0HACxBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,wBAC5JH,EAAAA,EAAAA,KAAA,MACE,GAAM,kBAAgB,mBAExBA,EAAAA,EAAAA,KAAA,yCACAA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,4CACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,2EACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,6EACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,mCAErBH,EAAAA,EAAAA,KAAA,MACE,GAAM,sCAAoC,uCAE5CA,EAAAA,EAAAA,KAAA,gGAA0FA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,wBAAwBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,4CAA4CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,MACtUH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,0EAG9BH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,wCACZH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,oBAAoBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,MACpKH,EAAAA,EAAAA,KAAA,MACE,GAAM,wBAAsB,yBAE9BA,EAAAA,EAAAA,KAAA,0FAAoFA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,oCAC7IH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,u1CAyChCH,EAAAA,EAAAA,KAAA,MACE,GAAM,wBAAsB,yBAE9BA,EAAAA,EAAAA,KAAA,4BAAsBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,qLAE/EH,EAAAA,EAAAA,KAAA,0BACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,iXAMhCH,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAE/BA,EAAAA,EAAAA,KAAA,oJAA8IA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,mGACxHH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,uDAC5HH,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,UACxBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,cAA4B,mBACpEH,EAAAA,EAAAA,KAAA,iCAA2BA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,uCACjFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,4OAWhCH,EAAAA,EAAAA,KAAA,6GAAuGA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,+BAA+BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,4FACzJH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,+CAA+CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,MAC9OH,EAAAA,EAAAA,KAAA,MACE,GAAM,0BAAwB,2BAEhCA,EAAAA,EAAAA,KAAA,qJACkCA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC5C,KAAQ,2DACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,uBAAqC,eAAmB,MACvFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,gDAG9BH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,SAAmB,uNAG5CH,EAAAA,EAAAA,KAAA,MACE,GAAM,8BAA4B,+BAEpCA,EAAAA,EAAAA,KAAA,+BAAyBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,sDACtFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,gKAMhCH,EAAAA,EAAAA,KAAA,2CAAqCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,UAAwB,gDACvFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,sXAchCH,EAAAA,EAAAA,KAAA,kEAA4DA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,0BAA0BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,sBAAsBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,sCACpRH,EAAAA,EAAAA,KAAA,MACE,GAAM,+BAA6B,gCAErCA,EAAAA,EAAAA,KAAA,0BAAoBA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,yBAAyBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,gDAAgDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,yCAC3OH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,MAAMH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,UAAUH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,eAA6B,4HAC3HH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,oBAAkC,wDAClJH,EAAAA,EAAAA,KAAA,MACE,GAAM,yBAAuB,0BAE/BA,EAAAA,EAAAA,KAAA,iBAAWA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACrB,KAAQ,oFACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iBAA+B,WAAe,iBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,uBAAuBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACrL,KAAQ,mFAAiF,wBAC5D,yEAAyEH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,kBAAgC,wIAC5CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,gBAA8B,gBAChLH,EAAAA,EAAAA,KAAA,MACE,GAAM,6CAA2C,8CAEnDA,EAAAA,EAAAA,KAAA,mDAA6CA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,iBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,YAA0B,sFACjJH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACjC,KAAQ,4CACPH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAiC,qBAAyB,0DACzFH,EAAAA,EAAAA,KAAA,iCAA2BA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,sBAAoC,sDACzFH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,kRAU9BH,EAAAA,EAAAA,KAAA,iBAAWA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,mBAAiC,8BAA8BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,wOAE1JH,EAAAA,EAAAA,KAAA,mDAA6CA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,cAA4B,6BAA6BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,mEAChLH,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,wBAAyBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,cAA4B,iBAAiBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,YAA0B,aACzKH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,yCAA0CH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,mBAAiC,YACzHH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,8BAA+BH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,cAA4B,WAE3GH,EAAAA,EAAAA,KAAA,MACE,GAAM,oBAAkB,qBAE1BA,EAAAA,EAAAA,KAAA,qBAAeA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,SAAuB,oDAAoDH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,gBACpKH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,kBAG9BH,EAAAA,EAAAA,KAAA,iDAA2CA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,yCAC3FH,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,MAAOH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,oBAAkC,wDACvFH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,QAASH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,MAAI,cAA4B,4EAErFH,EAAAA,EAAAA,KAAA,qBAAeA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,SAAuB,qGACXH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,QAAsB,gBACrGH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,eAAa,kBAG9BH,EAAAA,EAAAA,KAAA,oFAA8EA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,eAA6B,yBAAyBH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iCAA+C,mFAI3O,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://commerce-pwa-studio/./src/pages/tutorials/targets/change-static-assets-directory/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"change-static-assets-directory\"\n    }}>{`Change static assets directory`}</h1>\n    <p>{`When you build a storefront project based on the Venia template, it copies the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/tree/develop/packages/venia-ui/venia-static\"\n      }}><inlineCode parentName=\"a\">{`venia-static`}</inlineCode>{` directory`}</a>{` from the `}<inlineCode parentName=\"p\">{`venia-ui`}</inlineCode>{` package into your `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory.\nThis directory contains brand-specific files such as icons and the website's `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file.\nTo use a different set of these files, you will need to create a new static assets directory and copy it into `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` during build time.`}</p>\n    <h2 {...{\n      \"id\": \"tasks-overview\"\n    }}>{`Tasks overview`}</h2>\n    <p>{`In this tutorial, you will:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create your own static assets directory`}</li>\n      <li parentName=\"ol\">{`Configure Webpack to copy that directory over during the build process`}</li>\n      <li parentName=\"ol\">{`Configure the UPWARD server to look for specific files in that directory`}</li>\n      <li parentName=\"ol\">{`Build and verify your changes`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"create-new-static-assets-directory\"\n    }}>{`Create new static assets directory`}</h2>\n    <p>{`In your storefront project's root directory, run the following command to copy the `}<inlineCode parentName=\"p\">{`venia-static`}</inlineCode>{` directory from the `}<inlineCode parentName=\"p\">{`venia-ui`}</inlineCode>{` dependency into a new directory called `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`cp -r node_modules/@magento/venia-ui/venia-static my-static-assets\n`}</code></pre>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{`\nIf your project does not have the `}<inlineCode parentName=\"p\">{`node_modules`}</inlineCode>{` directory, run `}<inlineCode parentName=\"p\">{`yarn install`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"update-manifest-file\"\n    }}>{`Update manifest file`}</h3>\n    <p>{`Replace the Venia icons in that directory with your own icons and update the `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{` file to reflect those changes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  {\n-     \"name\": \"Venia\",\n-     \"short_name\": \"Venia\",\n+     \"name\": \"My Storefront\",\n+     \"short_name\": \"Storefront\",\n      \"start_url\": \"/\",\n      \"theme_color\": \"#1F39FF\",\n      \"display\": \"standalone\",\n      \"background_color\": \"#fff\",\n-     \"description\": \"Shop the look\",\n+     \"description\": \"This is my example storefront\",\n      \"icons\": [\n          {\n-             \"src\": \"/venia-static/icons/venia_circle_144.png\",\n+             \"src\": \"/my-static-assets/icons/my-storefront_144.png\",\n              \"sizes\": \"144x144\",\n              \"type\": \"image/png\"\n          },\n          {\n-             \"src\": \"/venia-static/icons/venia_circle_192.png\",\n+             \"src\": \"/my-static-assets/icons/my-storefront_192.png\",\n              \"sizes\": \"192x192\",\n              \"type\": \"image/png\"\n          },\n          {\n-             \"src\": \"/venia-static/icons/venia_circle_512.png\",\n+             \"src\": \"/my-static-assets/icons/my-storefront_512.png\",\n              \"sizes\": \"512x512\",\n              \"type\": \"image/png\"\n          },\n          {\n-             \"src\": \"/venia-static/icons/venia_maskable_512.png\",\n+             \"src\": \"/my-static-assets/icons/my-storefront_maskable_512.png\",\n              \"sizes\": \"512x512\",\n              \"type\": \"image/png\",\n              \"purpose\": \"maskable\"\n          }\n      ]\n  }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"update-html-template\"\n    }}>{`Update HTML template`}</h3>\n    <p>{`Your project's `}<inlineCode parentName=\"p\">{`template.html`}</inlineCode>{` file also contains references to Venia static assets which you may want to update.\nEdit this file and make the necessary changes to point these references to your new assets.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <link rel=\"apple-touch-icon\" href=\"/venia-static/icons/venia_square_57.png\">\n- <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/venia-static/icons/apple-touch-icon.png\">\n+ <link rel=\"apple-touch-icon\" href=\"/my-static-assets/icons/my-storefront_57.png\">\n+ <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/my-static-assets/icons/apple-touch-icon.png\">\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-copy-instructions\"\n    }}>{`Add copy instructions`}</h2>\n    <p>{`Now that you have a custom static assets directory in your project, you need to tell the build process to copy this directory into the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` folder when it runs.\nThere are two main ways to do this: creating an entry in your project's `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file or modifying the Webpack configuration file.`}</p>\n    <h3 {...{\n      \"id\": \"using-upwardyml-recommended\"\n    }}>{`Using `}<inlineCode parentName=\"h3\">{`upward.yml`}</inlineCode>{` (recommended)`}</h3>\n    <p>{`Open your project's `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file and add the following entry:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  status: veniaResponse.status\n  headers: veniaResponse.headers\n  body: veniaResponse.body\n\n+ myStaticIncludes:\n+     resolver: directory\n+     directory:\n+         resolver: inline\n+         inline: './my-static-assets'\n`}</code></pre>\n    <p>{`During the build process, a Buildpack plugin for Webpack looks for valid resource paths in your `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file and copies them into `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{`.\nEven though this object is not used anywhere during runtime, this entry declares the `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{` directory as a resource path to copy into `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"using-webpack-directly\"\n    }}>{`Using Webpack directly`}</h3>\n    <p>{`You can also explicitly tell Webpack to copy the static assets directory over using a copy plugin.\nTo do this, you need to install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/webpack-contrib/copy-webpack-plugin\"\n      }}><inlineCode parentName=\"a\">{`copy-webpack-plugin`}</inlineCode>{` dependency`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn add --dev copy-webpack-plugin@6.4.1\n`}</code></pre>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{`\nVersion 6.4.1 is used here instead of the latest because the current Venia template uses Webpack 4.\nIf you updated your storefront project to use Webpack 5, you can use the latest version of the copy plugin.`}</p>\n    <h4 {...{\n      \"id\": \"edit-webpack-configuration\"\n    }}>{`Edit Webpack configuration`}</h4>\n    <p>{`In your project's `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode>{`, add an import statement to the top of the file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`  const HTMLWebpackPlugin = require('html-webpack-plugin');\n+ const CopyPlugin = require(\"copy-webpack-plugin\");\n\n  module.exports = async env => {\n`}</code></pre>\n    <p>{`Append the copy plugin to the `}<inlineCode parentName=\"p\">{`plugin`}</inlineCode>{` array of the Webpack configuration object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`        new HTMLWebpackPlugin({\n            filename: 'index.html',\n            template: './template.html',\n            minify: {\n                collapseWhitespace: true,\n                removeComments: true\n            }\n        }),\n+       new CopyPlugin({\n+           patterns: [{ from: 'my-static-assets', to: 'my-static-assets' }]\n+       })\n    ];\n`}</code></pre>\n    <p>{`This entry tells Webpack to copy the contents of the `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{` directory into a new `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{` directory in the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` folder during the build process.`}</p>\n    <h2 {...{\n      \"id\": \"modify-upward-configuration\"\n    }}>{`Modify UPWARD configuration`}</h2>\n    <p>{`Now that the `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{` directory is inside `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{`, browsers can access these files under the `}<inlineCode parentName=\"p\">{`/my-static-assets`}</inlineCode>{` path.\nHowever, some files, such as `}<inlineCode parentName=\"p\">{`robots.txt`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`manifest.json`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`favicon.ico`}</inlineCode>{`, must be located at the root.\nTo serve these files from the root, you must configure the UPWARD server to look in the `}<inlineCode parentName=\"p\">{`my-static-assets`}</inlineCode>{` directory when it gets a request from these files.`}</p>\n    <h3 {...{\n      \"id\": \"identify-current-rule\"\n    }}>{`Identify current rule`}</h3>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/upward.yml\"\n      }}><inlineCode parentName=\"a\">{`veniaResponse`}</inlineCode>{` object`}</a>{` in the base `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file contains the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-ui/upward.yml\"\n      }}>{`conditional resolver`}</a>{` that tells the server to resolve requests for these files using the `}<inlineCode parentName=\"p\">{`staticFromRoot`}</inlineCode>{` object.\nAccording to this object, the current rule for resolving requests for these files is to look for and return them from the `}<inlineCode parentName=\"p\">{`venia-static`}</inlineCode>{` directory.`}</p>\n    <h3 {...{\n      \"id\": \"update-upward-configuration-using-targets\"\n    }}>{`Update UPWARD configuration using targets`}</h3>\n    <p>{`Since this rule is inside the primary `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file in the `}<inlineCode parentName=\"p\">{`venia-ui`}</inlineCode>{` dependency, you cannot make direct edits to this file.\nHowever, you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../api/buildpack/targets/index.md\"\n      }}><inlineCode parentName=\"a\">{`transformUpward`}</inlineCode>{` Buildpack target`}</a>{` to make changes indirectly during the build process.`}</p>\n    <p>{`Open your project's `}<inlineCode parentName=\"p\">{`local-intercept.js`}</inlineCode>{` file and replace the content with the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`function localIntercept(targets) {\n    targets.of('@magento/pwa-buildpack').transformUpward.tap(def => {\n        def.staticFromRoot.inline.body.file.template.inline =\n            './my-static-assets/{{ filename }}';\n    });\n}\n\nmodule.exports = localIntercept;\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`transformUpward`}</inlineCode>{` target converts the base `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` file into a JavaScript object you can modify using an interceptor function.\nThe interceptor function in the code sample provided sets the inline mustache template value with one that refers to the new static assets directory.`}</p>\n    <p>{`The build process generates the final `}<inlineCode parentName=\"p\">{`upward.yml`}</inlineCode>{` configuration under the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory, and the contents of this file is a combination of:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Content in the base `}<inlineCode parentName=\"li\">{`upward.yml`}</inlineCode>{` file in the `}<inlineCode parentName=\"li\">{`venia-ui`}</inlineCode>{` package`}</li>\n      <li parentName=\"ul\">{`Modifications to that file using the `}<inlineCode parentName=\"li\">{`transformUpward`}</inlineCode>{` target`}</li>\n      <li parentName=\"ul\">{`Content in your project's `}<inlineCode parentName=\"li\">{`upward.yml`}</inlineCode>{` file`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"build-and-verify\"\n    }}>{`Build and verify`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` command to create a production build under the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn build\n`}</code></pre>\n    <p>{`After the build completes, open the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory and verify the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A `}<inlineCode parentName=\"li\">{`my-static-assets`}</inlineCode>{` folder exists with the same content as the source.`}</li>\n      <li parentName=\"ol\">{`The `}<inlineCode parentName=\"li\">{`upward.yml`}</inlineCode>{` file contains the modifications described in the local intercept file`}</li>\n    </ol>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` command to start the production server.\nThis server runs using the production build inside the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn start\n`}</code></pre>\n    <p>{`Use your browser to navigate to your application and try to access the `}<inlineCode parentName=\"p\">{`favicon.ico`}</inlineCode>{` file from the root (`}<inlineCode parentName=\"p\">{`<application URL>/favicon.ico`}</inlineCode>{`).\nYour browser should return your new icon instead of the default Venia icon.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}