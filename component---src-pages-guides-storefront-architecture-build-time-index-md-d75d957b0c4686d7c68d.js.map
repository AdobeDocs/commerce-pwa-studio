{"version":3,"file":"component---src-pages-guides-storefront-architecture-build-time-index-md-d75d957b0c4686d7c68d.js","mappings":"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","sources":["webpack://commerce-pwa-studio/./src/pages/guides/storefront-architecture/build-time/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-pwa-studio/commerce-pwa-studio/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"build-time-architecture\"\n    }}>{`Build time architecture`}</h1>\n    <p>{`The build architecture of PWA Studio is the system used to compile JavaScript and CSS source code into a production-ready PWA storefront application.`}</p>\n    <h2 {...{\n      \"id\": \"backend-application-dependency\"\n    }}>{`Backend application dependency`}</h2>\n    <p>{`PWA Studio is part of Adobe Commerce's `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Service-oriented_architecture\"\n      }}>{`service-oriented architecture`}</a>{` vision.\nThis vision minimizes dependencies by separating the merchant-facing store admin and the shopper-facing storefront application.\nSeparating these two applications minimizes the dependencies between them.`}</p>\n    <p>{`The Venia build system respects this principle by running the build process independent from the Adobe Commerce or Magento Open Source core application.\nHowever, the build system does use the application's API at compilation time for additional validation and optimization of storefront code.`}</p>\n    <h2 {...{\n      \"id\": \"repository-organization\"\n    }}>{`Repository organization`}</h2>\n    <p>{`Unlike Adobe Commerce and Magento Open Source themes, the source code for a PWA Studio storefront does not need to be co-located with the application code.\nA PWA Studio storefront and its backend service are two separate applications, so\ntheir codebase is separate from each other.`}</p>\n    <p>{`The Venia concept storefront uses the `}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{` package for dependency management, but\nstorefronts built using PWA Studio can also use NPM to manage dependencies and run scripts.`}</p>\n    <p>{`Early adopters of PWA Studio have cloned the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/\"\n      }}><inlineCode parentName=\"a\">{`pwa-studio`}</inlineCode>{` repository`}</a>{` and made direct customizations to the Venia concept source.\nThis can lead to conflicts when updating to the latest version of the codebase.\nThe preferred approach is to add PWA Studio tools and libraries as dependencies in a project.`}</p>\n    <p>{`The recommended way of getting started is to use the scaffolding tool to `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/tutorials/setup-storefront/\"\n      }}>{`setup a new storefront project`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"build-pipeline\"\n    }}>{`Build pipeline`}</h2>\n    <p>{`The build pipeline is the mechanism that consumes the project source code to generate production-ready files.\nThis process includes code `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Source-to-source_compiler\"\n      }}>{`transpilation`}</a>{` and smart script bundling.\nLike most modern Web compilation tools, it is built on `}<a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/en/about/\"\n      }}>{`NodeJS`}</a>{`.`}</p>\n    <p>{`The main tools used for the build pipeline are `}<a parentName=\"p\" {...{\n        \"href\": \"https://babeljs.io\"\n      }}>{`Babel`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://webpack.js.org/\"\n      }}>{`Webpack`}</a>{`.\nThe Buildpack library provides a convenient API for configuring these tools, but the underlying API for building a PWA is a direct configuration of Babel and Webpack.`}</p>\n    <p>{`The Venia example storefront project contains an opinionated build pipeline setup, using Buildpack's `}<inlineCode parentName=\"p\">{`configureWebpack`}</inlineCode>{` API, but\ndevelopers can also use the PWA-Studio build libraries and configurations to define custom pipelines.`}</p>\n    <h3 {...{\n      \"id\": \"venia-build-steps\"\n    }}>{`Venia build steps`}</h3>\n    <p>{`The following sections provide insight into the processes that make up Venia's build pipeline.`}</p>\n    <h4 {...{\n      \"id\": \"starting-a-build\"\n    }}>{`Starting a build`}</h4>\n    <p>{`Venia's build process begins at the command prompt.\nIt is compatible with OSX and most Linux environments that use a `}<inlineCode parentName=\"p\">{`bash`}</inlineCode>{` shell.`}</p>\n    <p>{`PWA Studio projects use `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.npmjs.com/misc/scripts\"\n      }}>{`NPM scripts`}</a>{` to organize frequently used commands.\nThese `}<inlineCode parentName=\"p\">{`yarn run`}</inlineCode>{` commands are found in the `}<inlineCode parentName=\"p\">{`scripts`}</inlineCode>{` section of the Venia storefront's `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/blob/develop/packages/venia-concept/package.json\"\n      }}>{`package.json`}</a>{` file.`}</p>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`build`}</inlineCode>{` command to start the build process:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`yarn run build\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"cleanup-step\"\n    }}>{`Cleanup step`}</h4>\n    <p>{`The build process runs a `}<inlineCode parentName=\"p\">{`clean`}</inlineCode>{` script to remove old artifacts from the Venia concept's `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` directory before generating the code.`}</p>\n    <h4 {...{\n      \"id\": \"environment-validation\"\n    }}>{`Environment validation`}</h4>\n    <p>{`The next phase uses the `}<inlineCode parentName=\"p\">{`buildpack load-env`}</inlineCode>{` command to load and validate the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file, which describes the store project configuration.\nThis file is found in the root directory of the Venia concept project.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/guides/general-concepts/configuration/\"\n      }}>{`Configuration management`}</a>{` for more information.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`If there is no `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file in your project, create one with the `}<a parentName=\"p\" {...{\n        \"href\": \"/commerce-pwa-studio/api/buildpack/cli/create-environment-file/\"\n      }}><inlineCode parentName=\"a\">{`buildpack create-env-file`}</inlineCode>{` command`}</a>{`.`}</p>\n    <h4 {...{\n      \"id\": \"query-validation\"\n    }}>{`Query validation`}</h4>\n    <p>{`After the environment validation phase, the build runs the `}<inlineCode parentName=\"p\">{`validate-queries`}</inlineCode>{` script.\nThis script uses the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/pwa-studio/tree/develop/packages/graphql-cli-validate-magento-pwa-queries\"\n      }}><inlineCode parentName=\"a\">{`graphql-cli-validate-magento-pwa-queries`}</inlineCode></a>{` tool to analyze the GraphQL queries in the project and validates them against the schema downloaded from the configured Magento instance.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The connected Adobe Commerce or Magento Open Source instance is defined by the `}<inlineCode parentName=\"p\">{`MAGENTO_BACKEND_URL`}</inlineCode>{` environment variable.`}</p>\n    <h4 {...{\n      \"id\": \"webpack-execution\"\n    }}>{`Webpack execution`}</h4>\n    <p>{`The final step in the build process uses the webpack CLI (`}<inlineCode parentName=\"p\">{`webpack`}</inlineCode>{`) to process files into bundles.\nThe `}<inlineCode parentName=\"p\">{`webpack.config.js`}</inlineCode>{` file in the storefront project's root configures webpack to use external tools, such as Babel and Workbox, during file processing and bundle creation.`}</p>\n    <p>{`The artifacts generated by webpack are located in the `}<inlineCode parentName=\"p\">{`dist`}</inlineCode>{` folder.\nThese are static files ready to be served from an HTML document's app shell.`}</p>\n    <p>{`When a browser loads these files, it launches a single-page application that is the Venia storefront.`}</p>\n    <h3 {...{\n      \"id\": \"other-build-features\"\n    }}>{`Other build features`}</h3>\n    <p>{`The following build features are used mainly in a development environment.\nThey are not part of the normal production build process.`}</p>\n    <h4 {...{\n      \"id\": \"watch-mode\"\n    }}>{`Watch mode`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`watch`}</inlineCode>{` script launches a development server and a persistent compiler process that monitors the source code for changes.\nWhen a change is detected, it initiates an incremental rebuild instead of a full build to keep the application in the browser up to date.`}</p>\n    <p>{`This feature allows you to make edits in the code and see the changes in the application without going through the full build process.`}</p>\n    <h4 {...{\n      \"id\": \"linting-and-testing\"\n    }}>{`Linting and testing`}</h4>\n    <p>{`The Venia concept project also contains scripts for formatting (`}<inlineCode parentName=\"p\">{`yarn run prettier`}</inlineCode>{`), style analysis (`}<inlineCode parentName=\"p\">{`yarn run lint`}</inlineCode>{`), and running unit tests (`}<inlineCode parentName=\"p\">{`yarn test`}</inlineCode>{`).`}</p>\n    <p>{`Use these scripts to keep your codebase well-formatted and test functionality.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}